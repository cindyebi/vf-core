let searchIndex = {"pages": [
{"id":"0", "title": "404 ", "text": "  404 Unfortunately we couldn&apos;t find that page. You can see search results for it below.  Search Loading...  ", "tags": "", "url": "/404.html"},
{"id":"1", "title": "The Visual Framework ", "text": "  The Visual Framework beta A front-end toolkit to quickly build better life science websites. The Visual Framework (VF) is designed with the needs of life science websites and services. It goes beyond guidance for tables, graphs, data-heavy typography and focuses on being sane defaults and implements its CSS in a way that won&apos;t interfere with your existing components that use Bootstrap, Angular, or something else.  Search  Guide: Building a VF-powered system The when and how to making a project powered with Visual Framework components. See the building guide. Tailored for life science websites The Visual Framework address three major needs: Clarity the VF is highly customisable, but out of the box it has a highly usable look that builds in solid UX principles to increase comprehension and decrease cognitive load. Just because the scientific material is challenging, it doesn&apos;t mean using the website needs to be. Compatibility the VF won&apos;t break your other framework&apos;s CSS or JS, so bring Bootstrap, Foundation, React or Angular. With the VF components (and brand design) can be shared between sites without cross-contaminating other functionality. We achieve this by a CSS Modules-style approach: CSS: styling on HTML elements and only use namespaced classes, that is: - Nope: .button {} or button {} or div.button {} - Like this .vf-button {} JavaScript: Use ours or bring your own We&apos;ve included only a minimal amount of JS in components and it&apos;s fully optional (just remove the JavaScript selectors). If you&apos;d rather use Angular or Bootstrap for your tabs, the Visual Framework won&apos;t get in the way, just remove data-vf-js-tabs from your markup. Componentisation Use only the portions you need. Use vf-core to build your CSS, JS dynamically based on the components you need, or bring your own build system. FAQ Is VF Core just a Bootstrap with a different theme? No. VF Core is an architecture to build extensible components that contain CSS/Sass, JS, Nunjuck templates, and image assets. You could use the VF Core to make a Bootstrap-style framework. I&#x2019;m a small research team, should I use VF Core? Yes, utilise the Visual Framework system with one of the above listed approaches. Does it have a specific look and feel? No. It has a default look out of the box, but it is fully customisable by altering the Design Tokens. Is it really ready for use today? Yes! Shouldn&#x2019;t I just use Bootstrap or Solution X? No, but yes &#x2026; do both, if you need to. This question involve the Visual Framework&apos;s architecture which addresses common issues with code sharing and compatibility with life science webistes. This projecft allows you to share Visual Framework components without disrupting your freedom to choose Bootstrap, Foundation, jQuery, React or another framework for the rest of your site. What components are available? Many common component for tabs, boxes, links and so on are available. Help! Have a problem? See the Troubleshooting guide or chat the community on Slack.  Sections  Visual Framework building guide The when and how to making a project powered with Visual Framework components.   Component overview These components are available.   Developing Developing and contributing to the Visual Framework core.   Patterns and boilerplates More than components, this is how you should do things.  ", "tags": "", "url": "/index.html"},
{"id":"2", "title": "Visual Framework building guide ", "text": "  Visual Framework building guideThe when and how to making a project powered with Visual Framework components. Visual Framework components can be utilised in many ways, here are a few recommended approaches that will fit most use cases. Build static CSS, JS Need help converting VF components to static CSS and JS to pair with your existing application or site? Use the vf-build-boilerplate. It&apos;s also a good introduction into integrating VF components into an application. vf-build-boilerplate yarn create @visual-framework/vf-project your-new-site-name vf-build-boilerplate add Visual Framework components with yarn add @visual-framework/vf-component-name or make a new component with vf-component-generator A pre-made boilerplate using VF components Uses the performant 11ty as a static site generator to build sites with VF components. This approach pre-integrates the VF Core, giving you easy access to component assets and a rollup build process to generate compiled CSS and JS. vf-eleventy boilerplate yarn create @visual-framework/vf-project your-new-site-name add Visual Framework components with yarn add @visual-framework/vf-component-name or make a new component with vf-component-generator Build a design system using VF components Extendsvf-eleventyto document your design system, create+document components, patterns and boilerplates. You can also generate static CSS and JS assets for simple use elsewhere in vanilla HTML+CSS+JS pages. vf-demo-design-system boilerplate yarn create @visual-framework/vf-project your-new-site-name vf-demo-design-system add Visual Framework components with yarn add @visual-framework/vf-component-name or make a new component with vf-component-generator WordPress theme Build a WordPress site using VF components. Pre-alpha, link to come in autumn 2019 React boilerplate A demonstration React-based project using VF components. Pre-alpha, link to come in autumn 2019. Pre-alpha, link to come in autumn 2019 Bare bones VF components The most basic use of the Visual Framework components allows usage directly into your existing build environment. This approach gets you a components Sass, JS, template and any other assets and lets you build what you need. This approach is recommended for more advanced developers who are highly familar with Node and Sass. yarn add @visual-framework/vf-sass-config @visual-framework/vf-inlay  ", "tags": "", "url": "/building/index.html"},
{"id":"3", "title": "Component overview ", "text": "  Component overviewThese components are available.   Search grid Body vf-body Grid vf-grid Inlay vf-inlay Stack vf-stack element Badges vf-badge Visual Framework Blockquote vf-blockquote Button vf-button Collapse vf-collapse Visual Framework Divider vf-divider Explainer vf-explainer Favicon vf-favicon Visual Framework Figure vf-figure Visual Framework Headings vf-heading Visual Framework Link vf-link Visual Framework Lists vf-list Logo vf-logo No JS detection vf-no-js Visual Framework Text vf-text block Activity List vf-activity-list Article Meta Information vf-article-meta-information Box vf-box Breadcrumbs vf-breadcrumbs Card vf-card Code Example vf-code-example Discussion vf-discussion Embed vf-embed Footer vf-footer Global Header vf-global-header Lede vf-lede Links List vf-link-list Masthead vf-masthead Navigation vf-navigation Page Header vf-page-header Pagination vf-pagination Profile vf-profile Search vf-search vf-search-client-side vf-search-client-side Section Header vf-section-header Social icons vf-social-links Summary vf-summary Table vf-table Tabs vf-tabs Tree vf-tree Video vf-video Video Teaser vf-video-teaser container EBI Header and Footer ebi-header-footer Acivity List Group vf-activity-group Banner vf-banner Card Container vf-card-container Content vf-content Details vf-details Header vf-header Hero vf-hero Intro vf-intro News Container vf-news-container Show more vf-show-more Summary Container vf-summary-container Video Container vf-video-container utility Compatibility with EBI-VF 1.x Component ebi-vf1-integration EMBL Notifications embl-notifications Google Analytics enhancements vf-analytics-google Visual Framework Componet Rollup vf-componenet-rollup Design Tokens vf-design-tokens Plex Mono Font vf-font-plex-mono Plex Sans Font vf-font-plex-sans Nearest location vf-location-nearest JavaScript Polyfill vf-polyfill-js Sass config and templates vf-sass-config Sass Starter vf-sass-starter Full Bleed vf-u-fullbleed Utility Classes vf-utility-classes ", "tags": "", "url": "/components/index.html"},
{"id":"4", "title": "I&#39;m an update ", "text": "  Sample integrations of the VF with other Frameworks: Pure VF 2.0 Bootstrap VF 2.0 + VF 1.x React (coming soonish) ", "tags": "", "url": "/demos/index.html"},
{"id":"5", "title": "Developing ", "text": "  DevelopingDeveloping and contributing to the Visual Framework core. A guide to what you need to do, how you should write it and how to maintain vf-core components. In the right place? Need to just make a VF-powered site? If you&apos;re not looking to develop the vf-core or add components for global use, then you might be in the wrong place. If you want to make a site or design system that uses Visual Framework components, then check out the Visual Framework building guide . Getting started If you&apos;d like to contribute code, components or documentation to the Visual Framework 2.0, first of all: thanks! We welcome ideas, bug reports, opinions and pull requests. Telling the maintainers why you want or have done something is always very helpful. Code of conduct Naming things Making your first Pull Request Structure of the Visual Framework core Setting up your development environment Making components Once you&apos;ve set up the VF Core locally or made a new design system, you&apos;ll want to extend it by creating components to add new charts, tables or other types of functionality. What&apos;s a component Creating a new component Deprecating components Updating, versioning a component General guidelines, best practice Some important reading on conding standards, governance and who we&apos;re looking to assist with the Visual Framework Core. Sass and CSS guidelines Governance of the Visual Framework JavaScript guidelines User base and needs Versioning  ", "tags": "", "url": "/developing/index.html"},
{"id":"6", "title": "Patterns and boilerplates ", "text": "  Patterns and boilerplatesMore than components, this is how you should do things. Where components offere technical implementations, patterns and boilerplates show how things should come together to facilitate tasks and goals. In this section Boilerplate for a generic page Use this boilerplate pattern for generic pages. Navigation The Visual Framework favours a container-based navigation system. ", "tags": "", "url": "/patterns/index.html"},
{"id":"7", "title": "Search ", "text": "  Search Search documentation and guidance.  Search Loading... ", "tags": "", "url": "/search/index.html"},
{"id":"8", "title": "Problems 🏚 😭 ", "text": "   Problems &#x1F3DA; &#x1F62D; alpha Troubleshooting tips for some frequent things that can go wrong. Many problems are due to local develpment environment configuration, here&apos;s how to get your machine back on track. Before filing a ticket or tossing your machine out the window, we&apos;ve found most issues can be sorted by one of these. Run yarn install Your node_modules folder might not be up to date. Reset your project&apos;s build Sometimes a project&apos;s node_modules directory can become contaminated or out of sync: remove the local build: rm -rf node_modules you can also try rebuilding the lock file: rm yarn.lock reinstall: yarn install Don&apos;t npm install Visual Framework systems work faster and are tested using yarn install. If you run npm install you may encounter unexpected issues or node may become confused if you&apos;re switching between npm install and yarn install. Use gulp dev and not gulp vf-dev If you&apos;re getting an error building your CSS or JS, make sure you&apos;re running the correct command. gulp vf-dev should only be invoked from the command line when developing vf-core, for other projects run gulp dev. Rollback your components or vf-core version You might have an incombatibility between component versions or vf-core. If you&apos;ve recently updated, rollback version and re-run gulp dev. If that fixes issues, consult the component CHANGELOG.md files or read up on the vf-core release notes. Make sure there are symlinks inside your component directory In your local component directory, you should have symlinks to where you keep your Yarn-installed components, such as ./src/components/vf-core-components which points to ../../node_modules/@visual-framework/. Sometimes these folders are manually deleted and not replaced by git origin pull, but git reset --hard will -- you&#x2019;ll want to save any local changes first. Git reset, hard Your local files might be out of sync, stash your local changes elsewhere and run git reset --hard. Using Windows? Windows has its own section of tips. Use Windows Terminal Preview And within that we recommend using PowerShell. Here&apos;s how to install Terminal. Use Scoop for dependency management If you need to install, node, yarn and all the things, use scoop. Windows paths Windows need some extra love with path handling, this can usually be sorted within node and gulp by let myFixedPath = myPath.replace(/\\/g, &apos;/&apos;); Symlinks and Windows The Visual Framework utilises symlinks, these work fine on Windows but they will need to be initialised on your first git pull: Open PowerShell as an Administrator Delete the old symlink rm .\src\components\vf-core-components Recreate it cmd /c mklink /D .\src\components\vf-core-components ..\..\node_modules\@visual-framework\  Still stumped? Make an issue or chat us. ", "tags": "", "url": "/troubleshooting/index.html"},
{"id":"9", "title": "ebi-header-footer ", "text": "     EBI Header and Footer Component This provides support for using the EBI header and footer from the EBI VF 1.3. It provides the minimum ammount of legacy CSS to make the header and footer work while avoiding conflicts with other 2.0 styles. Install This repository is distributed with [npm][npm]. After [installing npm][install-npm], you can install ebi-header-footer with this command. Note This component is not included in the default vf-component-rollup and will not be found in the default styles.css. You can add it to your local build or use https://dev.assets.emblstatic.net/vf/develop/assets/ebi-header-footer/ebi-header-footer.css Roadmap Version 1: Uses the existing //ebi.emblstatic.net/web_guidelines/EBI-Framework/v1.3/js/script.js to load the HTML for the header and footer. As such the component will use mostly legacy CSS from the existing v1.3 EBI VF. Version 2: Rewrite the EBI header and footer in v2.0 HTML and pull from the contentHub, then we can drop the legacy CSS and use pure v2.0 CSS. We can&apos;t yet do this as v1.3 is still the stable and supported solution for EBI sites, we will need to move a majority of sites to VF 2.0 before we can drop v1.3/js/script.js Usage The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default beta  Type: container  Nunjucks demo  Sample output   Your content here.     Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md ebi-header-footer--embl-selector.scss ebi-header-footer--footer.scss ebi-header-footer--form.scss ebi-header-footer--header.scss ebi-header-footer--layout.scss ebi-header-footer--utility.scss ebi-header-footer.css ebi-header-footer.scss ebi-header-footer.variables.scss File system location: components/ebi-header-footer ", "tags": "", "url": "/components/ebi-header-footer/index.html"},
{"id":"10", "title": "ebi-vf1-integration ", "text": "     Compatibility with EBI-VF 1.x Component todo: add this to vf-core components as we&apos;ll want to use this in many places This adds fixes, compatibility and workarounds for sites that use the EBI VF versions 1.1, 1.2 or 1.3. Enable its use by: body ebi-vf1-integration , or wrapping a section of html with the class .ebi-vf1-integration Install Option 1 Use the global VF 2.0 CSS along side your existing VF 1.x CSS; see: https://www.embl.org/guidelines/design/patterns/ Option 2 If you don&apos;t want to include all the VF 2.0 CSS, add only the compatibility CSS: Option 3 This repository is distributed with [npm][npm]. After [installing npm][install-npm], you can install ebi-vf1-integration with this command. Usage The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default beta  Type: utility  Sample output   A demonstration of a few fixes. To make an entire page VF 2.x-ish add ` ebi-vf1-integration ` to your body element. With .ebi-vf1-integration With .ebi-vf1-integration h1 h2 h3 I&apos;m bold a link variant A link Without .ebi-vf1-integration Without .ebi-vf1-integration h1 h2 h3 I&apos;m bold a link variant (click the link to see the visited state) A link   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md ebi-vf1-integration.css ebi-vf1-integration.js ebi-vf1-integration.scss ebi-vf1-integration.variables.scss File system location: components/ebi-vf1-integration ", "tags": "", "url": "/components/ebi-vf1-integration/index.html"},
{"id":"11", "title": "embl-breadcrumbs-lookup ", "text": "     EMBL Breadcrumbs Lookup Component About This requires and builds atop the vf-breadcrumbs and embl-content-meta-properties components for EMBL pages. This component reads meta properties and then performs a lookup to the EMBL contentHub. Returned are appropriate primary and secondary breadcrumbs. Notes: If a non-primairy breadcrumb value is notSet , a value will be inferred from the primairy breadcrumb&apos;s respective who, what or where Matching is performed on internal names first, display names second. UUID matching is still to be implemented If no URL for a term is found a search link will be generated If no primairy facet is provided, no breadcrumbs will be generated   Variants   Variant: Default beta  Type: embl-block  Nunjucks demo  Sample output     Sample output as HTML   Variant: Example beta  Type: embl-block  Nunjucks demo  Sample output       Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md embl-breadcrumbs-lookup.css embl-breadcrumbs-lookup.js embl-breadcrumbs-lookup.scss File system location: components/embl-breadcrumbs-lookup ", "tags": "", "url": "/components/embl-breadcrumbs-lookup/index.html"},
{"id":"12", "title": "embl-conditional-edit ", "text": "     EMBL Conditional Edit Links component About Edit and configuration buttons often point to separate domain where the login stat of a user cannot be known, so this is a simple JavaScript method to enable links that point to edit and configuration pages. Currently supported methods: URL param: ?embl-conditional-edit=enabled or ?embl-conditional-edit=1 CSS cascaded: embl-coditional-edit__enabled .embl-conditional-edit { display: unset; } Note: this method is not about hiding the a URL from a user being able to see the link, rather it simply hides or shows a link based off a parameter. Install This repository is distributed with [npm][npm]. After [installing npm][install-npm], you can install primer-buttons with this command. Usage The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default beta  Type: embl-element  Nunjucks demo  Sample output   Sample content with a condtional edit link beneatht it. This is done through JavaScript where a parent element has data-embl-js-conditional-edit and ?embl-conditional-edit=enabled is appended to the URL. Edit This section is a non-JS solution where a parent element has `.embl-coditional-edit__enabled`. Edit  Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md embl-conditional-edit.css embl-conditional-edit.js embl-conditional-edit.scss File system location: components/embl-conditional-edit ", "tags": "", "url": "/components/embl-conditional-edit/index.html"},
{"id":"13", "title": "embl-content-hub-loader ", "text": "     EMBL ContentHub Loader component About Use this component to remotely load markup and content from the central EMBL ContentHub, this particular component allows reuse and distribution of content ranging articles to navigation elements (such as a global footer). Currently this is done as HTML imports (see the code example) + some JS. In the future other methods will be support (such as JSON). Integrations After loading from contentHub, this component will also invoke these functions on child content: vf-banner/vf-banner vf-tabs/vf-tabs embl-conditional-edit/embl-conditional-edit embl-notifications/embl-notifications Supported patterns See the introductory text on the contentHub. Standard HTML import Load a content and pattern through the contentHub: Options There are optional features specified by data attributes, looks like: Breakdown: data-target= publications-block : pass the class of an element to insert text into data-embl-js-content-hub-loader-no-content= No publications were found. : String to use if no results found, can also pass true to use default no match text data-embl-js-content-hub-loader-no-content-hide= .publications-container : If no results, hide an element that matches this selector selector data-inject- vf-grid vf-grid__col-2 data-inject-class-target= ul : Inject class(es) to a an element inside the returned content Install This repository is distributed with [npm][npm]. After [installing npm][install-npm], you can install primer-buttons with this command. Usage The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default beta  Type: embl-container  Nunjucks demo  Sample output   Below we do a sample import from the ContentHub:   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md embl-content-hub-loader.css embl-content-hub-loader.js embl-content-hub-loader.scss embl-content-hub-loader.variables.scss embl-content-hub-loader__fetch.js embl-content-hub-loader__html-imports.js File system location: components/embl-content-hub-loader ", "tags": "", "url": "/components/embl-content-hub-loader/index.html"},
{"id":"14", "title": "embl-content-meta-properties ", "text": "     EMBL Content Meta Properties About These meta tags describe the role of page within the EMBL information architecture. These consist of: Content descriptors embl:who the people, groups and teams involved embl:what the activities covered embl:where at which EMBL sites the content applies embl:active which of the above three facets is most important for this content Content role: embl:utility if content is task and work based or if is meant to inspire embl:reach if content is externally (public) or internally focused (those that work at EMBL) Page infromation: embl:maintainer the contact person or group responsible for the page embl:last-review the last time the page was reviewed or updated embl:review-cycle how long in days before the page should be checked embl:expiry if there is a fixed point in time when the page is no longer relevant These tags should be placed in your &lt;head&gt;. Why do they matter? Ensures future quality of content Will be programatically queried by other patterns to offer contextually-appropriate content and navigation Can affect the look and feel of content Installation and Implementation This component is distributed with npm. After installing npm, you can install the embl-content-meta-properties with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: embl-block  Nunjucks demo  Sample output      Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md embl-content-meta-properties.css embl-content-meta-properties.js embl-content-meta-properties.scss File system location: components/embl-content-meta-properties ", "tags": "", "url": "/components/embl-content-meta-properties/index.html"},
{"id":"15", "title": "embl-favicon ", "text": "    About Note: There is no Sass for this component. Installation and Implementation This component is distributed with npm. After installing npm, you can install the embl-favicon with this command. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: embl-element  Nunjucks demo  Sample output     Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md File system location: components/embl-favicon ", "tags": "", "url": "/components/embl-favicon/index.html"},
{"id":"16", "title": "embl-grid ", "text": "     EMBL Grid Component About The EMBL Layout System is applied to the Container components. It is an asymmetrical grid of four columns. There are 3 layout options. All EMBL Layouts are single column until the viewport is 768px or more. EMBL Layouts have two classes. One to define the grid area and where it is in the Page Grid another to determine what columns there are available. Install This component is distributed with npm. After installing npm, you can install the embl-grid with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules. Usage The CSS classnames available should be used on their own on a Container or added to a Containers existing classname declaration in the HTML. A EMBL Layout should only be applied to Containers. For Blocks you should use the [Visual Framework Grid System]({{ &apos;/docs/grids/grid-system&apos; | path }}). If the EMBL Layout System is being added to a Container that has a classname we separate the classes in the HTML with a |.  Variants   Variant: Default live  Type: embl-grid  Nunjucks demo  Sample output        Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md embl-grid.css embl-grid.scss File system location: components/embl-grid ", "tags": "", "url": "/components/embl-grid/index.html"},
{"id":"17", "title": "embl-logo ", "text": "     EMBL Logo Component About Install This component is distributed with npm. After installing npm, you can install the embl-logo with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: embl-element  Nunjucks demo  Sample output   European Molecular Biology Laboratory Home  Sample output as HTML   Variant: Extreme live  Type: embl-element  Nunjucks demo  Sample output   European Molecular Biology Laboratory Home  Sample output as HTML   Variant: Responsive live  Type: embl-element  Nunjucks demo  Sample output   European Molecular Biology Laboratory Home  Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md embl-logo.css embl-logo.scss File system location: components/embl-logo ", "tags": "", "url": "/components/embl-logo/index.html"},
{"id":"18", "title": "embl-notifications ", "text": "     EMBL Notifications component Fetches notifications from the EMBL contentHub and will display them, if a matching URL is found. Possible features not currently planned: Only show if a wrapping element has data-vf-js-embl-notifications Also load messages from EBI&apos;s existing announcement JS at https://ebi.emblstatic.net/announcements.js Use the vf-banner precompiled njk template to render output Test for better support on non-VF 2.0 sites Install This repository is distributed with [npm][npm]. After [installing npm][install-npm], you can install embl-notifications with this command. Usage Add this to your ./components/vf-component-rollup/scripts.js: You can masquerade as another page or URL for adhoc use cases or testing:   Variants   Variant: Default alpha  Type: utility  Sample output    Sample output as HTML   Variant: Example alpha  Type: utility  Sample output   Some content to demonstrate notification behaviour on long pages. Vitae vestibulum felis sollicitudin integer sagittis lacus cum, sociis est quam habitant volutpat tempor, et netus fermentum quis erat eleifend. Cubilia accumsan nullam conubia hendrerit penatibus purus pulvinar sodales primis hac, aliquam pretium velit tristique nec netus mattis enim mus, commodo fringilla urna eget cursus praesent elementum venenatis mollis. Taciti ultricies congue tempus ultrices phasellus semper quam massa nascetur leo mollis, eleifend venenatis dictumst lectus nibh eget imperdiet feugiat velit quis posuere, malesuada nisi ut dignissim fames aenean cum at non sed. Vestibulum a proin morbi congue erat ridiculus lectus arcu, augue eget platea lacus diam pretium ultricies ante, posuere per faucibus penatibus molestie rutrum praesent. Vulputate imperdiet orci phasellus convallis montes metus tincidunt ad fermentum sociosqu, urna laoreet sapien accumsan parturient molestie faucibus suspendisse ligula, odio penatibus lectus velit fringilla est mi libero purus. Pretium elementum ut taciti cum platea nec euismod consequat curabitur, suscipit nullam quis vestibulum sed morbi dis scelerisque torquent dapibus, lacus dictumst tellus pulvinar congue tempus neque egestas. Primis iaculis accumsan tincidunt tristique, netus nascetur. Natoque sociis luctus diam hac per sociosqu, senectus fringilla porttitor ante eros tincidunt, pharetra tempor taciti purus eleifend. Turpis viverra habitasse quis ut mollis enim, neque sagittis massa morbi platea malesuada placerat, proin nullam egestas montes vitae. Cursus feugiat platea sed laoreet congue per placerat volutpat scelerisque, dis torquent lectus nostra massa eleifend mus porttitor, vulputate viverra facilisis dictum enim penatibus sociosqu odio. Felis sodales urna semper libero turpis per blandit faucibus lacinia placerat hendrerit mus, malesuada dapibus scelerisque ullamcorper curabitur cras ut quam ad volutpat. Natoque sociis luctus diam hac per sociosqu, senectus fringilla porttitor ante eros tincidunt, pharetra tempor taciti purus eleifend. Turpis viverra habitasse quis ut mollis enim, neque sagittis massa morbi platea malesuada placerat, proin nullam egestas montes vitae. Cursus feugiat platea sed laoreet congue per placerat volutpat scelerisque, dis torquent lectus nostra massa eleifend mus porttitor, vulputate viverra facilisis dictum enim penatibus sociosqu odio. Felis sodales urna semper libero turpis per blandit faucibus lacinia placerat hendrerit mus, malesuada dapibus scelerisque ullamcorper curabitur cras ut quam ad volutpat. Natoque sociis luctus diam hac per sociosqu, senectus fringilla porttitor ante eros tincidunt, pharetra tempor taciti purus eleifend. Turpis viverra habitasse quis ut mollis enim, neque sagittis massa morbi platea malesuada placerat, proin nullam egestas montes vitae. Cursus feugiat platea sed laoreet congue per placerat volutpat scelerisque, dis torquent lectus nostra massa eleifend mus porttitor, vulputate viverra facilisis dictum enim penatibus sociosqu odio. Felis sodales urna semper libero turpis per blandit faucibus lacinia placerat hendrerit mus, malesuada dapibus scelerisque ullamcorper curabitur cras ut quam ad volutpat. Posuere tortor volutpat etiam scelerisque, risus convallis hendrerit. Curae nisi convallis aptent ultricies purus dictum nullam, tellus aliquam mus potenti leo erat ornare et, ante cursus augue sociosqu diam justo. Turpis porttitor vestibulum posuere penatibus habitant duis phasellus, bibendum nunc venenatis suspendisse convallis quisque elementum, metus dapibus platea orci ridiculus iaculis. Libero dis orci nostra elementum phasellus fermentum, quisque vulputate nunc nisl facilisi dui, volutpat egestas a metus molestie. Est lacus mi auctor vel imperdiet mattis non euismod orci, eu vivamus mus etiam class vitae magnis ultrices. Aenean interdum enim faucibus est quisque, aptent ut lobortis maecenas sapien facilisi, parturient dapibus ridiculus pulvinar. Arcu eros neque erat purus enim eleifend sapien convallis lacus, nibh ultricies penatibus ridiculus torquent taciti tempus nisl mus, sociosqu viverra etiam vitae magna magnis malesuada sollicitudin.  Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md embl-notifications.css embl-notifications.js embl-notifications.scss embl-notifications.variables.scss File system location: components/embl-notifications ", "tags": "", "url": "/components/embl-notifications/index.html"},
{"id":"19", "title": "previews ", "text": "     Previews This is a parent collection of components.  Preview Variants preview  File system location: components/ ", "tags": "", "url": "/components/previews/index.html"},
{"id":"20", "title": "vf-activity-group ", "text": "     Activity List Group component About Install This component is distributed with npm. After installing npm, you can install the vf-activity-group with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default alpha  Type: container  Nunjucks demo  Sample output   Recent activity 24th January 2019 Sonia Furtado Neves published &apos;The Future of Training&apos; on EMBL News.  Mark Boulton updated Digital Strategy on Gitlab to version 1.1, with the comment Additional detail added to social section. 29th January 2019 Mark Boulton updated Digital Strategy on Gitlab to version 1.1, with the comment Additional detail added to social section.  Sonia Furtado Neves published &apos;The Future of Training&apos; on EMBL News.  Sonia Furtado Neves published &apos;The Future of Training&apos; on EMBL News. 30th January 2019 Sonia Furtado Neves published &apos;The Future of Training&apos; on EMBL News.  Sonia Furtado Neves published &apos;The Future of Training&apos; on EMBL News.  Mark Boulton updated Digital Strategy on Gitlab to version 1.1, with the comment Additional detail added to social section.   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-activity-group.scss File system location: components/vf-activity-group ", "tags": "", "url": "/components/vf-activity-group/index.html"},
{"id":"21", "title": "vf-activity-list ", "text": "     Activity List component About Install This component is distributed with npm. After installing npm, you can install the vf-activity-list with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default alpha  Type: block  Nunjucks demo  Sample output   Tuesday 20th February 2018 Sonia Furtado Neves published &apos;The Future of Training&apos; on EMBL News.  Sonia Furtado Neves published &apos;The Future of Training&apos; on EMBL News.  Mark Boulton updated Digital Strategy on Gitlab to version 1.1, with the comment Additional detail added to social section.   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-activity-list.css vf-activity-list.scss File system location: components/vf-activity-list ", "tags": "", "url": "/components/vf-activity-list/index.html"},
{"id":"22", "title": "vf-analytics-google ", "text": "     Google Analytics enhancements component Supplementary behaviour (primarily JavaScript) to ease tracking with Google Analytics. Usage This component will grow over time with additional event tracking behaviours. Meta tags Track dimensions: How to add dimension to your property? https://developers.google.com/analytics/devguides/collection/analyticsjs/custom-dims-mets https://support.google.com/analytics/answer/2709829?hl=en Region tracking You can track the region of the page a link is in: Notes: region names should not be repeated on the same page nested regions are currently not fully supported Verbose logging &lt;body data-vf-google-analytics-verbose= true &gt; JavaScript vfGaIndicateLoaded() Awaits and checks to see if Google Analytics client side JS has loaded. If it does, sets &lt;body data-vf-google-analytics-loaded=&apos;true&apos;&gt; vfGaIndicateUnloaded Utility method to invalidate prior GA check &lt;body data-vf-google-analytics-loaded=&apos;false&apos;&gt; Install This repository is distributed with [npm][npm]. After [installing npm][install-npm], you can install vf-analytics-google with this command. Javascript installation You should import this component in ./components/vf-component-rollup/scripts.js or your other JS process: Sass/CSS installation There is currently no Sass/css needed for this component.   Variants   Variant: Default alpha  Type: utility  Sample output   /* vf-analytics-google template file */ /* this may eventually suppport templates for metatags or other code snippets */  Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-analytics-google.css vf-analytics-google.js vf-analytics-google.scss vf-analytics-google.variables.scss File system location: components/vf-analytics-google ", "tags": "", "url": "/components/vf-analytics-google/index.html"},
{"id":"23", "title": "vf-article-meta-information ", "text": "     Article Meta Information component Use this alongside articles, news items and blog posts. Install This repository is distributed with [npm][npm]. After [installing npm][install-npm], you can install primer-buttons with this command. Usage The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default beta  Type: block  Nunjucks demo  Sample output    First-Name Surame  14th February 2019 Topics: cancer history  Comments &#x2014; 61  On this page heading link 1  heading link 2  heading link 3  heading link 4  heading link 5  heading link 6   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-article-meta-information.css vf-article-meta-information.js vf-article-meta-information.scss File system location: components/vf-article-meta-information ", "tags": "", "url": "/components/vf-article-meta-information/index.html"},
{"id":"24", "title": "vf-badge ", "text": "     Badge Component About The vf-badge component is used to label a page, part of a page, or a component. The vf-badge component can also be a link using &lt;a vf-badge href= &gt;badge title&lt;/a&gt;. Installation This repository is distributed with npm. After installing npm and yarn, you can install vf-profile with this command. Sass/CSS The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules. Usage The vf-badge component is used to denote if a page, section, or link has a production state of alpha, beta or other information. Content The vf-badge accepts a single text item of content. content type variable description ", "tags": "", "url": "/components/vf-badge/index.html"},
{"id":"25", "title": "vf-banner ", "text": "     Banner Component Usage Guidelines Informs visitors about important changes or persistent conditions. Use this component if you need to communicate to visitors in a prominent way. Banners are placed at the top of the page or section they apply to, and below the page or section header. Reflecting status General notice vf-banner vf-banner--notice In development services vf-banner vf-banner--phase Info vf-banner vf-banner--alert vf-banner--info This replaces vf-banner--phase Success vf-banner vf-banner--alert vf-banner--success Alert vf-banner vf-banner--alert vf-banner--alert Warning vf-banner vf-banner--alert vf-banner--warning note: The vf-banner--alert variants include the option to dismiss the banner. This is currently a &apos;bring your own JavaScript&apos; button. To include a close button in the markup you need to make sure you have the variable banner__dismissable set to true: JS Documentation for --modal variant Like all JS-enabled components in the Visual Framework, if you wish to use the bundled JS, you need to include JS data attributes, here is an overview of what the options are for the vf-banner--modal variant. Enable VF JS: data-vf-js-banner Banner type: dismissible: standard messaging type blocking: full screen persistent: no close button data-vf-js-banner-state= name_of_type ESC to close: Only works with blocking banner state data-vf-js-banner-esc-close= y Button text: Optional, leaving off will not incekt a close button data-vf-js-banner-button-text= Accept and close Button theme: Optional, leaving off will default to the secondary theme. primary, secondary, tertiary themes are available data-vf-js-banner-button-theme= primary Cookies: Both are optional, leaving either off will deactivate cookie storage data-vf-js-banner-cookie-name= myServiceName data-vf-js-banner-cookie-version= 0.1 Incrementing this string will invalidate old cookies. Extra buttons: data-vf-js-banner-extra-button= &lt;a href=&apos;#&apos;&gt;Optional button&lt;/a&gt;&lt;a target=&apos;_blank&apos; href=&apos;#&apos;&gt;New tab button&lt;/a&gt; &gt; This HTML string will be converted into VF markup for extra buttons. Optional. Message: data-vf-js-banner-modal-text: the .innerHTML of this element will be used as the markup for the message itself Install This repository is distributed with [npm][npm]. After [installing npm][install-npm], you can install primer-buttons with this command. Usage The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: container  Nunjucks demo  Sample output     Sample output as HTML   Variant: Info live  Type: container  Nunjucks demo  Sample output   Here is some very, very important information dismiss banner   Sample output as HTML   Variant: Warning live  Type: container  Nunjucks demo  Sample output   Easy now, easy does it. dismiss banner   Sample output as HTML   Variant: Danger live  Type: container  Nunjucks demo  Sample output   Oh dear, what have you done? dismiss banner   Sample output as HTML   Variant: Success live  Type: container  Nunjucks demo  Sample output   Congratulations! You have made something awesome! dismiss banner   Sample output as HTML   Variant: Inline live  Type: container  Nunjucks demo  Sample output   This is a new web page. Complete our quick survey to help us make it better.  Sample output as HTML   Variant: Fixed live  Type: container  Nunjucks demo  Sample output   This website uses cookies, and the limiting processing of your personal data to function. By using the site you are agreeing to this as outlined in our Privacy Notice and Terms Of Use.    Sample output as HTML   Variant: Top live  Type: container  Nunjucks demo  Sample output   BETA This is the new EMBL.org Complete our quick survey to help us make it better.  Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-banner--alerts.scss vf-banner--fixed.scss vf-banner--gdpr.scss vf-banner--phase.scss vf-banner.css vf-banner.js vf-banner.scss vf-banner.variables.scss File system location: components/vf-banner ", "tags": "", "url": "/components/vf-banner/index.html"},
{"id":"26", "title": "vf-blockquote ", "text": "     Blockquote Component About A way to quote and highlight text. The pullquote variant will be a decorative variation but has yet to be implemented, it may take inspiration from the VF 1.3 pullquote. Install This component is distributed with npm. After installing npm, you can install the vf-blockquote with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: element  Nunjucks demo  Sample output   &#x201C;Look back to move forwards&#x201D; is a well-known saying. Thus, I recently turned to VF&#x2019;s archivist, Anne-Flore Lalo&#xEB;, who helped me to search VF&#x2019;s amazing archive to learn how VF has depicted itself through the years. Maybe knowing more about our first visual identity could help us better.&#x201C;   Sample output as HTML   Variant: Pullquote live  Type: element  Nunjucks demo  Sample output   &#x201C;Look back to move forwards&#x201D; is a well-known saying. Thus, I recently turned to VF&#x2019;s archivist, Anne-Flore Lalo&#xEB;, who helped me to search VF&#x2019;s amazing archive to learn how VF has depicted itself through the years. Maybe knowing more about our first visual identity could help us better.&#x201C;   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-blockquote.css vf-blockquote.scss File system location: components/vf-blockquote ", "tags": "", "url": "/components/vf-blockquote/index.html"},
{"id":"27", "title": "vf-body ", "text": "     Body Component About The Body component can be used to create a centered layout to add your content. This should be added to the body element in the markup. Install This component is distributed with npm. After installing npm, you can install the vf-body with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules. CSS   Variants   Variant: Default live  Type: grid  Nunjucks demo  Sample output   This is for example purposes only. Please use the vf-body class on the body element only.   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-body.css vf-body.scss File system location: components/vf-body ", "tags": "", "url": "/components/vf-body/index.html"},
{"id":"28", "title": "vf-boilerplate-page ", "text": "     Boilerplate Page Component The basic structure of a simplified Visual Framework page.  Variants   Variant: Default alpha  Type: boilerplate  Nunjucks demo  Sample output   | Visual Framework component library  ", "tags": "", "url": "/components/vf-boilerplate-page/index.html"},
{"id":"29", "title": "vf-box ", "text": "     Box Component About The vf-box layout container can add spacing, a background color, a border, and text colours to an area of content. Usage A vf-box can be used in all layout components (vf-grid, vf-stack, embl-grid) and also inside of vf-content. For now vf-box is only designed to accept a heading and text (both have classes). The text node &#x2013; vf-box__text can also accept a link which will inherit the text colour. Options Is Link If you require the vf-box to link to a page you can do this by: Using .njk and .yml for content: if you are using .njk you only need to add a box_href to the data. Authoring in HTML: adding vf-box--is-link to the classes being used &lt;div vf-box vf-box--is-link &gt;...&lt;/div&gt;. adding the link inside of the title &lt;h3 vf-box__title &gt;&lt;a href= # vf-box__link &gt;A title&lt;/a&gt;&lt;/h3&gt;. Design Variants There are currently two Design variants available. To add the appropriate level of design you can add a component&#x2013;level class: vf-box--easy vf-box--normal Themes note: you need a design variant set at the page (todo), container (todo), or component level to make use of the themes available to avoid any potential conflicts with code or unexpected results The vf-box component allows for global and component&#x2013;level theming so that it is customisable to your needs. To make use of the component&#x2013;level theming you will need to add a theme classname to the component. The theme classnames available are: vf-box-theme--primary vf-box-theme--secondary vf-box-theme--tertiary vf-box-theme--quaternary vf-box-theme--quinary Accessibility Do not use the themes vf-box-theme--qauternary or vf-box-theme--quinary with the design variant vf-box--easy as they do not conform to WCAG colour contrast ratio specifications. Install This component is distributed with npm. After installing npm, you can install the vf-box with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: block  Nunjucks demo  Sample output     Sample output as HTML   Variant: Very Easy live  Type: block  Nunjucks demo  Sample output   Did you know? This is some more content that would be in the box.  Sample output as HTML   Variant: Easy live  Type: block  Nunjucks demo  Sample output   Did you know? This is some more content that would be in the box.  Sample output as HTML   Variant: Easy Primary live  Type: block  Nunjucks demo  Sample output   Did you know? This is some more content that would be in the box.  Sample output as HTML   Variant: Easy Secondary live  Type: block  Nunjucks demo  Sample output   Did you know? This is some more content that would be in the box.  Sample output as HTML   Variant: Easy Tertiary live  Type: block  Nunjucks demo  Sample output   Did you know? This is some more content that would be in the box.  Sample output as HTML   Variant: Easy Quaternary live  Type: block  Nunjucks demo  Sample output   Did you know? This is some more content that would be in the box.  Sample output as HTML   Variant: Easy Quinary live  Type: block  Nunjucks demo  Sample output   Did you know? This is some more content that would be in the box.  Sample output as HTML   Variant: Normal live  Type: block  Nunjucks demo  Sample output   Did you know? This is some more content that would be in the box.  Sample output as HTML   Variant: Normal Primary live  Type: block  Nunjucks demo  Sample output   Did you know? This is some more content that would be in the box.  Sample output as HTML   Variant: Normal Secondary live  Type: block  Nunjucks demo  Sample output   Did you know? This is some more content that would be in the box.  Sample output as HTML   Variant: Normal Tertiary live  Type: block  Nunjucks demo  Sample output   Did you know? This is some more content that would be in the box.  Sample output as HTML   Variant: Normal Quaternary live  Type: block  Nunjucks demo  Sample output   Did you know? This is some more content that would be in the box.  Sample output as HTML   Variant: Normal Quinary live  Type: block  Nunjucks demo  Sample output   Did you know? This is some more content that would be in the box.  Sample output as HTML   Variant: Hard live  Type: block  Nunjucks demo  Sample output   Did you know? This is some more content that would be in the box.  Sample output as HTML   Variant: Extreme live  Type: block  Nunjucks demo  Sample output   Did you know? This is some more content that would be in the box.  Sample output as HTML   Variant: Intense live  Type: block  Nunjucks demo  Sample output   Did you know? This is some more content that would be in the box.  Sample output as HTML   Variant: Easy Primary Is A Link live  Type: block  Nunjucks demo  Sample output   Did you know? This is some more content that would be in the box.  Sample output as HTML   Variant: Normal Primary Is A Link live  Type: block  Nunjucks demo  Sample output   Did you know? This is some more content that would be in the box.  Sample output as HTML   Variant: Normal Primary Is A Link Inner Text Link live  Type: block  Nunjucks demo  Sample output   Did you know? This is some more content with a link that would be in the box.  Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-box.css vf-box.scss vf-box.variables.scss File system location: components/vf-box ", "tags": "", "url": "/components/vf-box/index.html"},
{"id":"30", "title": "vf-breadcrumbs ", "text": "     Breadcrumbs Component About Your meat-and-potatoes breadcrumbs. A max depth of no-more-than three items is recommended. The With Related variant allows you to indicate related items. Install This component is distributed with npm. After installing npm, you can install the vf-breadcrumbs with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: block  Nunjucks demo  Sample output    Explore  Topics  Centre   Sample output as HTML   Variant: With Related live  Type: block  Nunjucks demo  Sample output   Explore  Topics  Centre Related: Biscuits  Fruits For Cheese   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-breadcrumbs--with-related.scss vf-breadcrumbs.css vf-breadcrumbs.scss vf-breadcrumbs.variables.scss File system location: components/vf-breadcrumbs ", "tags": "", "url": "/components/vf-breadcrumbs/index.html"},
{"id":"31", "title": "vf-button ", "text": "     Button Component About Install This component is distributed with npm. After installing npm, you can install the vf-button with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Primary live  Type: element  Nunjucks demo  Sample output   a primary button   Sample output as HTML   Variant: Secondary live  Type: element  Nunjucks demo  Sample output   a secondary button   Sample output as HTML   Variant: Tertiary live  Type: element  Nunjucks demo  Sample output   a tertiary button   Sample output as HTML   Variant: Small live  Type: element  Nunjucks demo  Sample output   a small button   Sample output as HTML   Variant: Regular live  Type: element  Nunjucks demo  Sample output   a regular button   Sample output as HTML   Variant: Large live  Type: element  Nunjucks demo  Sample output   a large button   Sample output as HTML   Variant: Pill live  Type: element  Nunjucks demo  Sample output   a pill style   Sample output as HTML   Variant: Rounded live  Type: element  Nunjucks demo  Sample output   a rounded style   Sample output as HTML   Variant: Outline live  Type: element  Nunjucks demo  Sample output   an outline style   Sample output as HTML   Variant: Link live  Type: element  Nunjucks demo  Sample output   a link variant   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-button.css vf-button.scss File system location: components/vf-button ", "tags": "", "url": "/components/vf-button/index.html"},
{"id":"32", "title": "vf-card ", "text": "     Card Component About There are currently two types of card component that can be used for your projects. Each card component requires the additional modifier class to be added into either your .yml file or directly into the HTML. Install This repository is distributed with [npm][npm]. After [installing npm][install-npm], you can install vf-card with this command. Usage The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default alpha  Type: block  Nunjucks demo  Sample output     Sample output as HTML   Variant: Very Easy alpha  Type: block  Nunjucks demo  Sample output   A Easy Card Title 1 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Sapiente harum, omnis provident saepe aut eius aliquam sequi fugit incidunt reiciendis, mollitia quos?  Sample output as HTML   Variant: Easy alpha  Type: block  Nunjucks demo  Sample output   A Easy Card Title 2 Lorem ipsum dolor sit amet, consectetur adipisicing elit. Sapiente harum, omnis provident saepe aut eius aliquam sequi fugit incidunt reiciendis, mollitia quos?  Sample output as HTML   Variant: Easy (primary) alpha  Type: block  Nunjucks demo  Sample output   Easy Card with primary accent Lorem ipsum dolor sit amet, consectetur adipisicing elit. Sapiente harum, omnis provident saepe aut eius aliquam sequi fugit incidunt reiciendis, mollitia quos?  Sample output as HTML   Variant: Easy (secondary) alpha  Type: block  Nunjucks demo  Sample output   A Easy Card with secondary accent Lorem ipsum dolor sit amet, consectetur adipisicing elit. Sapiente harum, omnis provident saepe aut eius aliquam sequi fugit incidunt reiciendis, mollitia quos?  Sample output as HTML   Variant: Easy (tertiary) alpha  Type: block  Nunjucks demo  Sample output   A Easy Card with tertiary accent Lorem ipsum dolor sit amet, consectetur adipisicing elit. Sapiente harum, omnis provident saepe aut eius aliquam sequi fugit incidunt reiciendis, mollitia quos?  Sample output as HTML   Variant: Easy (quaternary) alpha  Type: block  Nunjucks demo  Sample output   A Easy Card with quaternary accent Lorem ipsum dolor sit amet, consectetur adipisicing elit. Sapiente harum, omnis provident saepe aut eius aliquam sequi fugit incidunt reiciendis, mollitia quos?  Sample output as HTML   Variant: Normal alpha  Type: block  Nunjucks demo  Sample output   A Normal Card Lorem ipsum dolor sit amet, consectetur adipisicing elit. Sapiente harum, omnis provident saepe aut eius aliquam sequi fugit incidunt reiciendis, mollitia quos?  Sample output as HTML   Variant: Normal (primary) alpha  Type: block  Nunjucks demo  Sample output   A Normal Card with primary accent Lorem ipsum dolor sit amet, consectetur adipisicing elit. Sapiente harum, omnis provident saepe aut eius aliquam sequi fugit incidunt reiciendis, mollitia quos?  Sample output as HTML   Variant: Normal (secondary) alpha  Type: block  Nunjucks demo  Sample output   A Normal Card with secondary accent Lorem ipsum dolor sit amet, consectetur adipisicing elit. Sapiente harum, omnis provident saepe aut eius aliquam sequi fugit incidunt reiciendis, mollitia quos?  Sample output as HTML   Variant: Normal (tertiary) alpha  Type: block  Nunjucks demo  Sample output   A Normal Card with tertiary accent Lorem ipsum dolor sit amet, consectetur adipisicing elit. Sapiente harum, omnis provident saepe aut eius aliquam sequi fugit incidunt reiciendis, mollitia quos?  Sample output as HTML   Variant: Normal (quaternary) alpha  Type: block  Nunjucks demo  Sample output   A Normal Card with quaternary accent Lorem ipsum dolor sit amet, consectetur adipisicing elit. Sapiente harum, omnis provident saepe aut eius aliquam sequi fugit incidunt reiciendis, mollitia quos?  Sample output as HTML   Variant: Normal (primary) link alpha  Type: block  Nunjucks demo  Sample output   A Normal Primary Card with Link Lorem ipsum dolor sit amet, consectetur adipisicing elit. Sapiente harum, omnis provident saepe aut eius aliquam sequi fugit incidunt reiciendis, mollitia quos?  Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-card.css vf-card.js vf-card.scss vf-card.variables.scss File system location: components/vf-card ", "tags": "", "url": "/components/vf-card/index.html"},
{"id":"33", "title": "vf-card-container ", "text": "     vf-card-container Component Install This repository is distributed with [npm][npm]. After [installing npm][install-npm], you can install vf-card-container with this command. Usage The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default alpha  Type: container  Nunjucks demo  Sample output   Missions To promote molecular biology across EuropeTo create a centre of excellence for Europe&apos;s leading young molecular biologists One card Lorem ipsum dolor sit amet, consectetur adipisicing elit. Sapiente harum, omnis provident saepe aut eius aliquam sequi fugit incidunt reiciendis, mollitia quos?  A card here Lorem ipsum dolor sit amet, consectetur adipisicing elit. Sapiente harum, omnis provident saepe aut eius aliquam sequi fugit incidunt reiciendis, mollitia quos?  Another card Lorem ipsum dolor sit amet, consectetur adipisicing elit. Sapiente harum, omnis provident saepe aut eius aliquam sequi fugit incidunt reiciendis, mollitia quos?   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-card-container.css vf-card-container.js vf-card-container.scss vf-card-container.variables.scss File system location: components/vf-card-container ", "tags": "", "url": "/components/vf-card-container/index.html"},
{"id":"34", "title": "vf-code-example ", "text": "     Code Example Component About If you&apos;re using the VF Nunjucks environment, you can utilise the {% codeblock &apos;html&apos; -%}{% endcodeblock %} tag to assist generating pre-formatted content. Install This component is distributed with npm. After installing npm, you can install the vf-code-example with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: block  Nunjucks demo  Sample output     Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-code-example.css vf-code-example.scss File system location: components/vf-code-example ", "tags": "", "url": "/components/vf-code-example/index.html"},
{"id":"35", "title": "vf-collapse ", "text": "     vf-collapse Component Collapse and expand components are useful in a variety of utilitarian situations to show and hide information These will likely be similar in functionality to the Bootstrap collapse component We may use the &lt;detail&gt; element This is a draft component, it is not yet functional. Background on the implementation, goals and work plan can be found in the issue. Install This repository is distributed with [npm][npm]. After [installing npm][install-npm], you can install vf-collapse with this command. Usage The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default alpha  Type: element  Nunjucks demo  Sample output   /* vf-collapse template file */  Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-collapse.css vf-collapse.js vf-collapse.scss vf-collapse.variables.scss File system location: components/vf-collapse ", "tags": "", "url": "/components/vf-collapse/index.html"},
{"id":"36", "title": "vf-componenet-rollup ", "text": "     Component Rollup Component The vf-componenet-rollup compiles component Sass and JS into style.css and scripts.js files, retrospectively. Install You&apos;ll likely want to configure this component to include or exclude Sass and JS files, we suggest cloning it to your local ./src/components. Get an tarball of this component with: However for very generic VF projects, this component is also distributed with [npm][npm]. After [installing npm][install-npm], you can install vf-componenet-rollup with this command. Usage Unlike other components, you probably won&apos;t want to @import this. Instead the vf-core project will compile this into a style.css and scripts.js. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: utility  Sample output     Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md scripts.js File system location: components/vf-componenet-rollup ", "tags": "", "url": "/components/vf-componenet-rollup/index.html"},
{"id":"37", "title": "vf-content ", "text": "     Content Area Component About This container adds support for long form content where it may not be practical to assign classes, such as Markdown or WYSIWYG text. It also makes some adjustments for longer form text, such as vertical spacing and making visited links purple. This container adds basic support for p, ul, hr, a and other core html elements. Some components may also add specific support for .vf-content Install This component is distributed with npm. After installing npm, you can install the vf-content with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: container  Nunjucks demo  Sample output   EMBL communications strategy 2018-2020 Cian O&apos;Luanaigh, 2 July 2018 at 12:55 pm This communications strategy outlines EMBL&#x2019;s vision, mission and goals. It is intended to support everyone who communicates on behalf of EMBL, within and outside of the organisation, in order to provide aligned messaging and help EMBL to achieve its goals. The strategy is supported by an operational plan for the Strategy and Communications team. The plan reflects the priorities defined in the communications strategy and translates them into a set of deliverables and projects managed by the Strategy and Communications team. This documentation will be regularly reviewed and revised. Your feedback is welcome at any time: please contact EMBL&#x2019;s Strategy and Communications team. This document was last revised 7 March 2018 Section 1: EMBL&#x2019;s vision and mission EMBL&#x2019;s vision Enabling scientists worldwide to discover the secrets of life EMBL&#x2019;s mission Uncovering the molecular basis of life through research Providing research infrastructure and services Training and inspiring the next generation of scientists Driving research, innovation and progress through technology development Interactions with industry and technology transfer Playing a leading role in the integration of life science research Further examples of bullets A bulleted item A nested bulleted item A nested bulleted item A bulleted item A bulleted item A bulleted item A bulleted item  Event Date Type Location  ", "tags": "", "url": "/components/vf-content/index.html"},
{"id":"38", "title": "vf-deprecated ", "text": "     Deprecated Demo Component This component demonstrates a deprecated component. See the contents of vf-deprecated.config.yml See the documentation.   Variants   Variant: Default deprecated  Type: deprecated  Nunjucks demo  Sample output     Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-deprecated.css vf-deprecated.js vf-deprecated.scss vf-deprecated.variables.scss File system location: components/vf-deprecated ", "tags": "", "url": "/components/vf-deprecated/index.html"},
{"id":"39", "title": "vf-design-tokens ", "text": "     Design Tokens Component These are the colour, typography, spacing, and other stylistic decisions as design tokens for consumption Building To update these run gulp vf-tokens from ./components/vf-design-tokens.  Variants   Variant: Welcome live  Type: utility  Sample output   The Design Tokens used within `vf-core` are generated from several `.yml` files. These are then compiled into various Sass files as needed. In the future we hope to offer Sketch and Photoshop colour palettes. If you required a different format (LESS, iOS, Android). Please get in touch. Design tokens are the visual design atoms of the design system &#x2014; specifically, they are named entities that store visual design attributes. We use them in place of hard-coded values (such as hex values for color or pixel values for spacing) in order to maintain a scalable and consistent visual system for UI development. &#x2014; Salesforce, Lightning Design System.   Sample output as HTML   Variant: Breakpoints live  Type: utility  Sample output   Something went wrong.   Sample output as HTML   Variant: Colours live  Type: utility  Sample output   Something went wrong.   Sample output as HTML   Variant: Spacing live  Type: utility  Sample output   Something went wrong.   Sample output as HTML   Variant: Themes live  Type: utility  Sample output   Something went wrong.   Sample output as HTML   Variant: Typography live  Type: utility  Sample output   Something went wrong.   Sample output as HTML   Variant: Ui Colours live  Type: utility  Sample output   Something went wrong.   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md gulpfile.js vf-design-tokens.scss File system location: components/vf-design-tokens ", "tags": "", "url": "/components/vf-design-tokens/index.html"},
{"id":"40", "title": "vf-details ", "text": "     vf-details Component Usage This component makes use of the HTML details element. Use it in places where information is optional. You can add the open attribute to toggle the default state (&lt;details vf-details open&gt;). Install This repository is distributed with [npm][https://www.npmjs.com/]. After [installing npm][https://www.npmjs.com/get-npm] and yarn, you can install vf-details with this command. JS This component does not use JS. Sass/CSS If your component uses Sass: The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules. Help Read the Visual Framework troubleshooting Open a ticket Chat on Slack   Variants   Variant: Default beta  Type: container  Nunjucks demo  Sample output   I&apos;m a detail Something small enough to escape casual notice.  Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-details.css vf-details.js vf-details.scss vf-details.variables.scss File system location: components/vf-details ", "tags": "", "url": "/components/vf-details/index.html"},
{"id":"41", "title": "vf-discussion ", "text": "     Discussion Component Install This repository is distributed with [npm][npm]. After [installing npm][install-npm], you can install primer-buttons with this command. Usage The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default beta  Type: block  Nunjucks demo  Sample output   3 comments on &apos;EMBL&apos;s graphic design history&apos;  Title If Relevant says: 15th February 2018  Really enjoyed reading this post, thank you. For me, any communications strategy should be deeply rooted in the organisational strategy. And yet, your closing question reminded me how the discussions we lead about communications can often result in much broader discussions on organisational goals, ambitions and approaches.  Reply  Title If Relevant says: 15th February 2018  Really enjoyed reading this post, thank you.  Reply Optional action   Mr. Nested says: 16th Febraury 2018   Really enjoyed reading this post, thank you.  Reply    Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-discussion.css vf-discussion.js vf-discussion.scss vf-discussion.variables.scss File system location: components/vf-discussion ", "tags": "", "url": "/components/vf-discussion/index.html"},
{"id":"42", "title": "vf-divider ", "text": "     Divider Component About The vf-divider component creates a horizontal dividing line to help separate content into their own container chunks. Install This component is distributed with npm. After installing npm, you can install the vf-divider with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules. Usage The vf-divider does not have to be implemented inside it&apos;s own grid container and should rely on the parent vf-body to fill the width of the page.  Variants   Variant: Default live  Type: element  Nunjucks demo  Sample output     Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-divider.css vf-divider.scss File system location: components/vf-divider ", "tags": "", "url": "/components/vf-divider/index.html"},
{"id":"43", "title": "vf-embed ", "text": "     vf-embed Component Usage The vf-embed component can currently give two different aspect ratios by adding a class variant. You can also define a max-width for the embed if needed. Nunjucks Props To avoid any mistyping, forgetfulness, and to aid in future proofing the component. We are using &apos;pseudo props&apos; in nunjucks to determine which CSS selectors to use. All props do nothing unless included in your data for the component. Props available vf_embed_max_width: required a number and CSS unit to give vf-embed as maximum width. This number is applied to the CSS custom property --vf-embed-max-width. vf_embed_variant_16x9: if set to true (vf_embed_variant_16x9: true) it will apply the class selector vf-embed--16x9 to vf-embed. vf_embed_variant_4x3: if set to true (vf_embed_variant_4x3: true) it will apply the class selector vf-embed--4x3 to vf-embed. vf_embed_variant_custom: if set to true (&apos;vf_embed_variant_custom: true&apos;) it will apply the class selector vf-embed--custom-ratio to vf-embed. When this is applied the two CSS custom properties --vf-embed-custom-ratio-x and --vf-embed-custom-ratio-y can be used to define the X and Y ratio. Aspect Ratios Aspect Ratios available are 16x9 and 4x3 or one defined using CSS custom properties. Class Variants vf-embed--16x9 for embedable content that is has an aspect ratio of 16x9. vf-embed--4x3 for embedable content that is has an aspect ratio of 4x3. vf-embed--custom-ratio for embedable content that requires a unique aspect ratio. Custom Ratios If you use vf-embed--custom-ratio you will need to set the X and Y ratio using CSS Custom Properties. The CSS Custom Properties available when using vf-embed--custom-ratio are: --vf-embed-custom-ratio-x for the X value. --vf-embed-custom-ratio-y for the Y value. For example. If you need an aspect ratio of 11x6 your HTML output could look like: Max Width You can also set a max width for the vf-emded. If you do this in the nunjucks file with the key of maxWidth: the nunjucks template will output an inline style onto the vf-embed. You can add this however fits best your product (in the :root, in a stylesheet, etc). If you do not set a --vf-embed-max-width value then the component is set to a maximum width of 100%. For example. If you need a vf-embed with the aspect ratio of 16x9 but with a maximum width of 400px your HTML out could look like: Install This repository is distributed with [npm][https://www.npmjs.com/]. After [installing npm][https://www.npmjs.com/get-npm] and yarn, you can install vf-embed with this command. JS If your component uses JS: You should import this component in ./components/vf-component-rollup/scripts.js or your other JS process: Sass/CSS If your component uses Sass: The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules. Help Read the Visual Framework troubleshooting Open a ticket Chat on Slack   Variants   Variant: 16x9 live  Type: block  Nunjucks demo  Sample output     Sample output as HTML   Variant: 4 X 3 live  Type: block  Nunjucks demo  Sample output     Sample output as HTML   Variant: 16 X 9 And Max Width live  Type: block  Nunjucks demo  Sample output     Sample output as HTML   Variant: Custom live  Type: block  Nunjucks demo  Sample output     Sample output as HTML   Variant: Custom And Max Width live  Type: block  Nunjucks demo  Sample output     Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-embed.css vf-embed.js vf-embed.scss vf-embed.variables.scss File system location: components/vf-embed ", "tags": "", "url": "/components/vf-embed/index.html"},
{"id":"44", "title": "vf-explainer ", "text": "     vf-explainer Component Life science websites love a bit of jargon and complicated concepts and explainers help for terms like: ORCID, transcript isoform, and lymphoblastoid cell lines. This will likely be similar to tooltips or foldable info tabs . Conceptual code: This is a draft component, it is not yet functional. Background on the implementation, goals and work plan can be found in the issue. Install This repository is distributed with [npm][npm]. After [installing npm][install-npm], you can install vf-explainer with this command. Usage The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default alpha  Type: element  Nunjucks demo  Sample output   /* vf-explainer template file */  Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-explainer.css vf-explainer.js vf-explainer.scss vf-explainer.variables.scss File system location: components/vf-explainer ", "tags": "", "url": "/components/vf-explainer/index.html"},
{"id":"45", "title": "vf-favicon ", "text": "     Favicon Component About A template to specify favicons for your site: Yields: Install This component is distributed with npm. After installing npm, you can install the vf-favicon with this command. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: element  Nunjucks demo  Sample output     Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md File system location: components/vf-favicon ", "tags": "", "url": "/components/vf-favicon/index.html"},
{"id":"46", "title": "vf-figure ", "text": "     Figure Component Usage The vf-figure componet defaults to give the image a maximum width of 100% so that it can be placed inside of a grid (like vf-grid) and fill the space of the grid item(s) that have been allocated by its parent. If you need to specify the width of the component you can use the CSS custom property --vf-figure__width which will override the width in the CSS. The vf-figure component also has some alignment class selectors available. Class Selectors vf-figure--align: required to align the component depending on where it is needed. This class also changes the width of the image to auto but can still be overriden with --vf-figure__width. The class also changes the display to display: table so that we can confine the figcaption inside of the figure HTML element without any overflow. vf-figure--align-inline-start: This class adds float: left;. vf-figure--align-inline-end: This class adds float: right;. vf-figure--align-inline-centered: This class adds margin: 0 auto;. Nunjucks Props To avoid any mistyping, forgetfulness, and to aid in future proofing the component. We are using &apos;pseudo props&apos; in nunjucks to determine which CSS selectors to use. All props do nothing unless included in your data for the component. Props available vf_figure__align_inline_start: if set to true (vf_figure__align_inline_start: true) it will apply the class selectors vf-figure--align vf-figure--align-inline-start to vf-figure. vf_figure__align_inline_end: if set to true (vf_figure__align_inline_end: true) it will apply the class selectors vf-figure--align vf-figure--align-inline-end to vf-figure. vf_figure__align_inline_centered: if set to true (vf_figure__align_inline_centered: true) it will apply the class selectors vf-figure--align vf-figure--align-inline-centered to vf-figure. Install This component is distributed with npm. After installing npm, you can install the vf-figure with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default beta  Type: element  Nunjucks demo  Sample output   Version, 1982, Adenovirus with 217 dots   Sample output as HTML   Variant: Align Inline Start beta  Type: element  Nunjucks demo  Sample output   Version, 1982, Adenovirus with 217 dots   Sample output as HTML   Variant: Align Inline End beta  Type: element  Nunjucks demo  Sample output   Version, 1982, Adenovirus with 217 dots   Sample output as HTML   Variant: Align Centered beta  Type: element  Nunjucks demo  Sample output   Version, 1982, Adenovirus with 217 dots   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-figure.css vf-figure.scss File system location: components/vf-figure ", "tags": "", "url": "/components/vf-figure/index.html"},
{"id":"47", "title": "vf-font-plex-mono ", "text": "     Font Plex Mono Component About Makes IBM Plex Mono font-family with a weight of 400 available to your Sass/CSS and other higher-level components. Install This component is distributed with npm. After installing npm, you can install the vf-font-plex-mono with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: utility  Sample output   I&apos;m vf-font-plex-mono.   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-font-plex-mono.scss File system location: components/vf-font-plex-mono ", "tags": "", "url": "/components/vf-font-plex-mono/index.html"},
{"id":"48", "title": "vf-font-plex-sans ", "text": "     Font Plex Sans Component About Makes IBM Plex Sans font-family in various weights and italic available to your Sass/CSS and other higher-level components. Install This component is distributed with npm. After installing npm, you can install the vf-font-plex-sans with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: utility  Sample output   I&apos;m vf-font-plex-sans.   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-font-plex-sans.scss File system location: components/vf-font-plex-sans ", "tags": "", "url": "/components/vf-font-plex-sans/index.html"},
{"id":"49", "title": "vf-footer ", "text": "     Footer Component A container for links, copyright and other common content at the bottom of webpages. About Installation and Implementation This component is distributed with npm. After installing npm, you can install the vf-footer with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: block  Nunjucks demo  Sample output   A description of a site or organisation and what its goals are. Category  A link   Another link   Third link   Category  Entry   Entry   Entry   Entry   Entry   Category  Entry   Entry   Entry   Category  Entry   Entry   Entry   Category  Entry   Entry   Entry    Entry  Entry  Entry  Copyright &#xA9; Your Organisation. Maybe an address too, 5555, Somewhere, Earth. Tel: +49 00 000 000. Another entry   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-footer.css vf-footer.js vf-footer.scss vf-footer.variables.scss File system location: components/vf-footer ", "tags": "", "url": "/components/vf-footer/index.html"},
{"id":"50", "title": "vf-form ", "text": "     Vf Form This is a parent collection of components.  Vf Form Checkbox Variants vf-form__checkbox Vf Form Core Variants vf-form__core Vf Form Fieldset Variants vf-form__fieldset Vf Form Helper Variants vf-form__helper Vf Form Input Variants vf-form__input Vf Form Item Variants vf-form__item Vf Form Label Variants vf-form__label Vf Form Legend Variants vf-form__legend Vf Form Radio Variants vf-form__radio Vf Form Select Variants vf-form__select Vf Form Textarea Variants vf-form__textarea  File system location: components/ ", "tags": "", "url": "/components/vf-form/index.html"},
{"id":"51", "title": "vf-global-header ", "text": "     Global Header Component About Install This component is distributed with npm. After installing npm, you can install the vf-global-header with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: block  Nunjucks demo  Sample output   Visual Framework for Life Science websites services  research  training  about us   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-global-header.css vf-global-header.scss File system location: components/vf-global-header ", "tags": "", "url": "/components/vf-global-header/index.html"},
{"id":"52", "title": "vf-grid ", "text": "     Grid Component About As we cannot guarantee the Blocks within the a Micro Grid and make use of the child combinator &gt; and the universal selector * to target them. A Simple Grid is written to go from single column, to two column, to their respective column count depending on the size of the viewport. You can define the number of columns with a modifier class. Do Not Use with any component that uses the &lt;table&gt; HTML element as this breaks built-in browser accessibility for screen readers etc. Currently (16/03/20) The vf-grid is expecting to be a parent of vf-body. It does, however, work inside embl-grid now as we have added CSS to make it respect the boundaries so that it doesn&apos;t break. Install This component is distributed with npm. After installing npm, you can install the vf-grid with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules. Visual Framework Grid (auto layout) HTML Example 1  1 2  1 2 3  1 2 3 4  1 2 3 4 5  1 2 3 4 5 6 Visual Framework Grid (defined columns) If you have Blocks that need to be laid out on both X and Y axis you will need to add the modifier classes. HTML Example 1 2 3 4 5 6 HTML Example 1 2 3 4 5 6 HTML Example 1 2 3 4 5 6 HTML Example 1 2 3 4 5 6 HTML Example 1 2 3 4 5 6 7 8 9 10 11 12  Variants   Variant: Default live  Type: grid  Nunjucks demo  Sample output   auto layout auto layout auto layout auto layout auto layout vf-grid__col-2  vf-grid__col-3  vf-grid__col-4  vf-grid__col-5  vf-grid__col-6    Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-grid.css vf-grid.scss File system location: components/vf-grid ", "tags": "", "url": "/components/vf-grid/index.html"},
{"id":"53", "title": "vf-grid-page ", "text": "     Grid Page Component This component has been deprecated. Please use the new `vf-body` component. Install This component is distributed with npm. After installing npm, you can install the vf-grid-page with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules. To start with the page has a simple 3 column grid. The second grid item has a maximum width of 1300 pixels. The two outer grid columns fill the rest of the space to create a centred layout. The code for this layout is for the &lt;body vf-body &gt; tag so that the direct children inherit the grid columns. CSS   Variants   Variant: Default deprecated  Type: deprecated  Nunjucks demo  Sample output     Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-grid-page.css vf-grid-page.scss File system location: components/vf-grid-page ", "tags": "", "url": "/components/vf-grid-page/index.html"},
{"id":"54", "title": "vf-header ", "text": "     Header Component About Install This component is distributed with npm. After installing npm, you can install the vf-header with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: container  Nunjucks demo  Sample output   Visual Framework for Life Science websites services  research  training  about us   Strategy &amp; Communications Chromosome structure and dynamics  VF Hamburg Structural Biology  Home  Download  Release Notes  FAQ  Help  Licence  About  Feedback European Bioinformatics Institute services  research  training  about us   Sample output as HTML   Variant: Inlay live  Type: container  Nunjucks demo  Sample output    Strategy &amp; Communications Chromosome structure and dynamics  VF Hamburg Structural Biology  Home  Download  Release Notes  FAQ  Help  Licence  About  Feedback   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-header.css vf-header.scss File system location: components/vf-header ", "tags": "", "url": "/components/vf-header/index.html"},
{"id":"55", "title": "vf-heading ", "text": "     Heading Component About Install This component is distributed with npm. After installing npm, you can install the vf-heading with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: element  Nunjucks demo  Sample output     Sample output as HTML   Variant: Display live  Type: element  Nunjucks demo  Sample output   This heading size is extra large and inverted   Sample output as HTML   Variant: Extra Large live  Type: element  Nunjucks demo  Sample output   This heading size is extra large   Sample output as HTML   Variant: Large live  Type: element  Nunjucks demo  Sample output   This heading size is large   Sample output as HTML   Variant: Regular live  Type: element  Nunjucks demo  Sample output   This heading size is regular   Sample output as HTML   Variant: Small live  Type: element  Nunjucks demo  Sample output   This heading size is small   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-heading.css vf-heading.scss File system location: components/vf-heading ", "tags": "", "url": "/components/vf-heading/index.html"},
{"id":"56", "title": "vf-hero ", "text": "     vf-hero Component Usage The vf-hero component is to be used as a visual queue and page header. The vf-hero can take a heading, sub-heading, and text content. The text content can also be a link which adds am arrow icon. CSS Custom Properties --vf-hero-bg-image &#x2014; this is for the url for the background image. It can either be added, inline if you&apos;re writing the HTML, using the .yml data source of vf_hero_image, or by other needs (a input or upload in WordPress, for example). --vf-hero-grid__row--initial &#x2014; This is used to represent the heigh of the image and helps calculate the position of the content, depending on the variant you have chosen. Install This repository is distributed with [npm][npm]. After [installing npm][install-npm], you can install vf-hero with this command. Usage The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default alpha  Type: container  Nunjucks demo  Sample output   About the Hentze group!an example of some ancillary text The Hentze group combines biochemical and systems&#x2013;level approaches to investigate the connections between gene expression and cell metabolism, and their roles in human disease.   Sample output as HTML   Variant: Example alpha  Type: container  Nunjucks demo  Sample output   About the Hentze group! The Hentze group combines biochemical and systems&#x2013;level approaches to investigate the connections between gene expression and cell metabolism, and their roles in human disease. Learn more. About the Hentze group! The Hentze group combines biochemical and systems&#x2013;level approaches to investigate the connections between gene expression and cell metabolism, and their roles in human disease. Learn more. About the Hentze group! The Hentze group combines biochemical and systems&#x2013;level approaches to investigate the connections between gene expression and cell metabolism, and their roles in human disease. Learn more. About the Hentze group! The Hentze group combines biochemical and systems&#x2013;level approaches to investigate the connections between gene expression and cell metabolism, and their roles in human disease. Learn more. About the Hentze group! The Hentze group combines biochemical and systems&#x2013;level approaches to investigate the connections between gene expression and cell metabolism, and their roles in human disease. Learn more.  About the Hentze group! The Hentze group combines biochemical and systems&#x2013;level approaches to investigate the connections between gene expression and cell metabolism, and their roles in human disease. Learn more.  Sample output as HTML   Variant: Very Easy alpha  Type: container  Nunjucks demo  Sample output   About the Hentze group!an example of some ancillary text The Hentze group combines biochemical and systems&#x2013;level approaches to investigate the connections between gene expression and cell metabolism, and their roles in human disease.   Sample output as HTML   Variant: Easy alpha  Type: container  Nunjucks demo  Sample output   About the Hentze group!an example of some ancillary text The Hentze group combines biochemical and systems&#x2013;level approaches to investigate the connections between gene expression and cell metabolism, and their roles in human disease.   Sample output as HTML   Variant: Easy With Link alpha  Type: container  Nunjucks demo  Sample output   About the Hentze group!an example of some ancillary text The Hentze group combines biochemical and systems&#x2013;level approaches to investigate the connections between gene expression and cell metabolism, and their roles in human disease.   Sample output as HTML   Variant: Normal alpha  Type: container  Nunjucks demo  Sample output   About the Hentze group!an example of some ancillary text The Hentze group combines biochemical and systems&#x2013;level approaches to investigate the connections between gene expression and cell metabolism, and their roles in human disease.   Sample output as HTML   Variant: Hard alpha  Type: container  Nunjucks demo  Sample output   About the Hentze group!an example of some ancillary text The Hentze group combines biochemical and systems&#x2013;level approaches to investigate the connections between gene expression and cell metabolism, and their roles in human disease.   Sample output as HTML   Variant: Extreme alpha  Type: container  Nunjucks demo  Sample output   About the Hentze group!an example of some ancillary text The Hentze group combines biochemical and systems&#x2013;level approaches to investigate the connections between gene expression and cell metabolism, and their roles in human disease.   Sample output as HTML   Variant: Intense alpha  Type: container  Nunjucks demo  Sample output   About the Hentze group!Europe wide, global impact, infinite curiosity.an example of some ancillary text Learn more about EMBL&#x2019;s contribution to society   Sample output as HTML   Variant: Primary alpha  Type: container  Nunjucks demo  Sample output   About the Hentze group!an example of some ancillary text The Hentze group combines biochemical and systems&#x2013;level approaches to investigate the connections between gene expression and cell metabolism, and their roles in human disease.   Sample output as HTML   Variant: Secondary alpha  Type: container  Nunjucks demo  Sample output   About the Hentze group!an example of some ancillary text The Hentze group combines biochemical and systems&#x2013;level approaches to investigate the connections between gene expression and cell metabolism, and their roles in human disease.   Sample output as HTML   Variant: Tertiary alpha  Type: container  Nunjucks demo  Sample output   About the Hentze group!an example of some ancillary text The Hentze group combines biochemical and systems&#x2013;level approaches to investigate the connections between gene expression and cell metabolism, and their roles in human disease.   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-hero.css vf-hero.js vf-hero.scss vf-hero.variables.scss File system location: components/vf-hero ", "tags": "", "url": "/components/vf-hero/index.html"},
{"id":"57", "title": "vf-inlay ", "text": "     Inlay Component Install This repository is distributed with [npm][npm]. After [installing npm][install-npm], you can install primer-buttons with this command. Usage The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: grid  Nunjucks demo  Sample output    EMBL&apos;s top social media posts of 2017 and what we learned from them Laura Howes 06 February 2018 Leave Comment I want to take a look back at my first full year as EMBL&apos;s social media manager. So what worked best over 2017 and what can I learn from this? My basic goals for VF&#x2019;s social media are to build community and develop a shared understanding of who we as an organisation are. Consequently, I care about what resonates on the different social sites much more than driving traffic back to Visual Framework websites, although traffic is obviously a by-product. EMBL communications strategy 2018-2020 Cian O&apos;Luanaigh, 2 July 2018 at 12:55 pm This communications strategy outlines EMBL&#x2019;s vision, mission and goals. It is intended to support everyone who communicates on behalf of EMBL, within and outside of the organisation, in order to provide aligned messaging and help EMBL to achieve its goals. The strategy is supported by an operational plan for the Strategy and Communications team. The plan reflects the priorities defined in the communications strategy and translates them into a set of deliverables and projects managed by the Strategy and Communications team. This documentation will be regularly reviewed and revised. Your feedback is welcome at any time: please contact EMBL&#x2019;s Strategy and Communications team. This document was last revised 7 March 2018 Section 1: EMBL&#x2019;s vision and mission EMBL&#x2019;s vision Enabling scientists worldwide to discover the secrets of life EMBL&#x2019;s mission Uncovering the molecular basis of life through research Providing research infrastructure and services Training and inspiring the next generation of scientists Driving research, innovation and progress through technology development Interactions with industry and technology transfer Playing a leading role in the integration of life science research Further examples of bullets A bulleted item A nested bulleted item A nested bulleted item A bulleted item A bulleted item A bulleted item A bulleted item  Event Date Type Location  ", "tags": "", "url": "/components/vf-inlay/index.html"},
{"id":"58", "title": "vf-intro ", "text": "     Intro Component Installation This repository is distributed with npm. After installing npm and yarn, you can install vf-profile with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules. Usage The vf-intro component is to be used as the main title of a page or section where you need to include some additional text in a larger typeface. The vf-hero can take a heading, lede text, and paragraph(s) of text. It can also include a badge on the heading which can be a link. Use in vf-eleventy To use this component in a vf-eleventy project you will need to set the context for the content to pass through from the nunjucks file associated yaml file and include it. {% set context == UniqueContextName %} {% include containers.vf_intro %} note: due to how nunjucks handles special characters we have remove the @ at sign and need to replace the - hyphen used for an _ underscore to &amp;lcub;% include &amp;rcub; a component or container. As shown above instead of writing something like &amp;lcub;% include contaienrs.@vf-intro &amp;rcub; we need to type &amp;lcub;% include vf_intro &amp;rcub; You may wish to make use of some of your projects side specifc data or content. To do this you will need to set the relevant items of content before you {% include ... %} the component. Note: If you also declare this content in the .yml file it will take precedence over the inlined code. For example. If you wanted to make use of your projects siteConfig information. You can write out the inclusion of the component in you pages .njk file like so: {% set context == UniqueContextName %} {% set vf_intro_heading == siteConfig.siteInformation.short_description %} {% include containers.intro %} Content The vf-intro allows for a variet of text. content type variable description ", "tags": "", "url": "/components/vf-intro/index.html"},
{"id":"59", "title": "vf-lede ", "text": "     Lede Component Use vf-lede for introductory text. Install This repository is distributed with [npm][npm]. After [installing npm][install-npm], you can install primer-buttons with this command. Usage The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: block  Nunjucks demo  Sample output   Lede text is a generic type of conent for different diseases in which cells divide many more times than usual. This abnormal growth can affect many cell types in almost any part of the body.   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-lede.css vf-lede.js vf-lede.scss vf-lede.variables.scss File system location: components/vf-lede ", "tags": "", "url": "/components/vf-lede/index.html"},
{"id":"60", "title": "vf-link ", "text": "     Link Component About Install This component is distributed with npm. After installing npm, you can install the vf-link with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: element  Nunjucks demo  Sample output   A default link   Sample output as HTML   Variant: Example live  Type: element  Nunjucks demo  Sample output   A primary link A primary:hover link A primary:visited link A disabled primary link A primary link A primary:hover link A primary:visited link A disabled primary link A secondary link A secondary:hover link A secondary:visited link A disabled secondary link A secondary link A secondary:hover link A secondary:visited link A disabled secondary link This is an example of using inline links when you are using the .vf-content container. This is an example of using inline links when you are using the .vf-content container and the parent of the text also has a class for dark backgrounds.  Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-link--disabled.scss vf-link--primary.scss vf-link--secondary.scss vf-link.css vf-link.scss vf-link.variables.scss File system location: components/vf-link ", "tags": "", "url": "/components/vf-link/index.html"},
{"id":"61", "title": "vf-link-list ", "text": "     Link List Component About The Links List component is a robust list group that can be used in a variety of grid layouts. It can have a title &lt;h3 vf-links__heading &gt;Example Title&lt;/h3&gt;. In each list item you can have: A link &lt;a vf-links__link href= &gt;Example Link&lt;/a&gt;. Except for a Links List that is using the the design variant of vf-links__list--easy you can also use: It can make use of the vf-badge component &lt;span vf-badge &gt;Example Tag&lt;/span&gt;. It can include meta information &lt;p vf-links__meta &gt;Example Meta&lt;/p&gt;. Contextual Based Link Lists On this page If you want to provide a set of links that will anchor to sections on the page you should use: note: You will need to add a corresponding id to the section you are linking to for the anchor to work. Link List Linked Section In Page In this section If you want to include quick links as part of a section of content you can use: Link List Linked Text In Section Install This component is distributed with npm. After installing npm, you can install the vf-link-list with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: block  Nunjucks demo  Sample output   Latest Posts VF&#x2019;s top social media posts of 2017 and what we learned from them  The VF Imaging Centre all about visibility  Press office sprint 1 journalist personas  A colour scheme for VF  alpha Updated 14th February 2018  New team members   Sample output as HTML   Variant: Tight live  Type: block  Nunjucks demo  Sample output   Latest Posts All 39  Administration 39  Bioninformatics 39  Communication 39  Data Curation 39  General Support Services 39  IT and Infrastructure 39   Sample output as HTML   Variant: Very Easy live  Type: block  Nunjucks demo  Sample output   In this section All  Administration  Bioninformatics  Communication  Data Curation  General Support Services  IT and Infrastructure   Sample output as HTML   Variant: Easy live  Type: block  Nunjucks demo  Sample output   On this page All arrow-button-down  Administration arrow-button-down Updated 14th February 2018  Bioninfomatics arrow-button-down  Communication arrow-button-down  Data Curation arrow-button-down  General Support Services arrow-button-down  IT and Infrastructure arrow-button-down   Sample output as HTML   Variant: Has Images live  Type: block  Nunjucks demo  Sample output   Services  BioMedBridges   BioSamples   EFO   EGA   EMMA   ENA   GO   no image   GWAS Catalog   IMPC Portal   OLS   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-link-list.scss File system location: components/vf-link-list ", "tags": "", "url": "/components/vf-link-list/index.html"},
{"id":"62", "title": "vf-list ", "text": "     List Component About Classic html list &lt;li&gt; types: order, unordered, bulleted and inline. Install This component is distributed with npm. After installing npm, you can install the vf-list with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: element  Nunjucks demo  Sample output   a list item another list item and another list item yet another list item  Sample output as HTML   Variant: Inline live  Type: element  Nunjucks demo  Sample output   a list item another list item and another list item yet another list item  Sample output as HTML   Variant: Ordered live  Type: element  Nunjucks demo  Sample output   a list item another list item and another list item yet another list item  Sample output as HTML   Variant: Unordered live  Type: element  Nunjucks demo  Sample output   a list item another list item and another list item yet another list item  Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-list.css vf-list.scss File system location: components/vf-list ", "tags": "", "url": "/components/vf-list/index.html"},
{"id":"63", "title": "vf-logo ", "text": "     Logo Component About A simple component to add the Visual Framework logo to a page. You&apos;ll likely want to use this one as a template to add your own logo. Install This component is distributed with npm. After installing npm, you can install the vf-logo with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: element  Nunjucks demo  Sample output   Visual Framework 2.0  Sample output as HTML   Variant: Extreme live  Type: element  Nunjucks demo  Sample output   Visual Framework 2.0  Sample output as HTML   Variant: Hidden Text live  Type: element  Nunjucks demo  Sample output   Visual Framework 2.0  Sample output as HTML   Variant: Extreme With Hidden Text live  Type: element  Nunjucks demo  Sample output   Visual Framework 2.0  Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-logo.css vf-logo.scss File system location: components/vf-logo ", "tags": "", "url": "/components/vf-logo/index.html"},
{"id":"64", "title": "vf-masthead ", "text": "     Masthead Component About Background Colours By Default, the vf-masthead is white text on a black background except if it is the title block variant where the text will be black on a white background with an overall black background. This can be effected by either having a global theme class applied to a parent (usually on body) where the colours determined by the theme name will cascade into this component. The other way is to apply a component specific class that effects the colours. Theme Variants available are: vf-masthead-theme--primary vf-masthead-theme--secondary vf-masthead-theme--tertiary There is also a variant that allows for a background image - vf-masthead--has-image as well as a variant that allows for the text to be in a block of white (with the text being black) - vf-masthead--with-title-block. notes: If you are overriding the background or foreground (text) colour make sure you are: using a colour from the Visual Framework testing to be sure that the contrast ratio meets accessibility guidelines Background Image Size The maximum dimensions for a background image is 1224px wide with a height of 150px. As more and more displays are what we term &apos;retina&apos; they need to be twice the width and height to look crisp. Images that are used for mastheads need to have dimensions of 2448px by 300px. Text Colour When using a background image we have to determine the best text colour to meet the contrast ratio from our accessibility guidelines. We do this using JavaScript and the background image filename. In creating the background images for mastheads each image filename needs to have it&apos;s most dominate colour added as a hexadecimal code. The JavaScript looks for this hexidecimal colour code and mathematically works out the correct text colour to use. The CSS custom property --local-theme-fg-color is then applied in the style tag of the component. If JavaScript is disabled, or if it doesn&apos;t load with the page. The masthead will default to the background colour. Browser Support CSS Custom Properties do not work in older versions of Internet Explorer. We provide a default look for the masthead for these browser which is a white foreground colour (for text) on a green background. However, this can be overriden if needed using the Sass variables. Install This component is distributed with npm. After installing npm, you can install the vf-masthead with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: block  Nunjucks demo  Sample output    Strategy &amp; Communications Chromosome structure and dynamics  VF Hamburg Structural Biology   Sample output as HTML   Variant: Primary live  Type: block  Nunjucks demo  Sample output    Strategy &amp; Communications Chromosome structure and dynamics  VF Hamburg Structural Biology   Sample output as HTML   Variant: Secondary live  Type: block  Nunjucks demo  Sample output    Strategy &amp; Communications Chromosome structure and dynamics  VF Hamburg Structural Biology   Sample output as HTML   Variant: Tertiary live  Type: block  Nunjucks demo  Sample output    Strategy &amp; Communications Chromosome structure and dynamics  VF Hamburg Structural Biology   Sample output as HTML   Variant: With Background Image live  Type: block  Nunjucks demo  Sample output    Strategy &amp; Communications Chromosome structure and dynamics  VF Hamburg Structural Biology   Sample output as HTML   Variant: With Title Block live  Type: block  Nunjucks demo  Sample output    Strategy &amp; Communications Chromosome structure and dynamics  VF Hamburg Structural Biology   Sample output as HTML   Variant: Kitchen Sink live  Type: block  Nunjucks demo  Sample output    Strategy &amp; Communications Chromosome structure and dynamics  VF Hamburg Structural Biology   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-masthead--supports.scss vf-masthead.css vf-masthead.js vf-masthead.scss File system location: components/vf-masthead ", "tags": "", "url": "/components/vf-masthead/index.html"},
{"id":"65", "title": "vf-navigation ", "text": "     Navigation Component About Install This component is distributed with npm. After installing npm, you can install the vf-navigation with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: block  Nunjucks demo  Sample output    Home  Download  Release Notes  FAQ  Help  Licence  About  Feedback   Sample output as HTML   Variant: Global live  Type: block  Nunjucks demo  Sample output    services  research  training  about us   Sample output as HTML   Variant: Main live  Type: block  Nunjucks demo  Sample output    Home  Download  Release Notes  FAQ  Help  Licence  About  Feedback   Sample output as HTML   Variant: Main Very Easy live  Type: block  Nunjucks demo  Sample output   Home  Download  Release Notes  FAQ  Help  Licence  About  Feedback   Sample output as HTML   Variant: Main Easy live  Type: block  Nunjucks demo  Sample output   Home  Download  Release Notes  FAQ  Help  Licence  About  Feedback   Sample output as HTML   Variant: Main Normal live  Type: block  Nunjucks demo  Sample output   Home  Download  Release Notes  FAQ  Help  Licence  About  Feedback   Sample output as HTML   Variant: Main Hard live  Type: block  Nunjucks demo  Sample output   Home  Download  Release Notes  FAQ  Help  Licence  About  Feedback   Sample output as HTML   Variant: Main Extreme live  Type: block  Nunjucks demo  Sample output   Home  Download  Release Notes  FAQ  Help  Licence  About  Feedback   Sample output as HTML   Variant: Additional live  Type: block  Nunjucks demo  Sample output   European Bioinformatics Institute services  research  training  about us   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-navigation--additional.scss vf-navigation--global.scss vf-navigation--main.scss vf-navigation.css vf-navigation.scss vf-navigation.variables.scss File system location: components/vf-navigation ", "tags": "", "url": "/components/vf-navigation/index.html"},
{"id":"66", "title": "vf-news-container ", "text": "     News Container Component About Install This component is distributed with npm. After installing npm, you can install the vf-news-container with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default beta  Type: container  Nunjucks demo  Sample output   Projects 22 June 2018 What is Cancer?  General Combinations of cancer drugs can be quickly and cheaply tested using a novel microfluidic device. 22 June 2018 What is Cancer?  General Combinations of cancer drugs can be quickly and cheaply tested using a novel microfluidic device. 22 June 2018 What is Cancer?  General Combinations of cancer drugs can be quickly and cheaply tested using a novel microfluidic device. 22 June 2018 What is Cancer?  General Combinations of cancer drugs can be quickly and cheaply tested using a novel microfluidic device. 22 June 2018 What is Cancer?  General Combinations of cancer drugs can be quickly and cheaply tested using a novel microfluidic device. 22 June 2018 What is Cancer?  General Combinations of cancer drugs can be quickly and cheaply tested using a novel microfluidic device. 22 June 2018 What is Cancer?  General Combinations of cancer drugs can be quickly and cheaply tested using a novel microfluidic device. 22 June 2018 What is Cancer?  General Combinations of cancer drugs can be quickly and cheaply tested using a novel microfluidic device.   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-news-container.css vf-news-container.scss File system location: components/vf-news-container ", "tags": "", "url": "/components/vf-news-container/index.html"},
{"id":"67", "title": "vf-no-js ", "text": "     No JS Component Include this snippet directly in your &lt;head&gt; along with adding class .vf-no-js to your &lt;html&gt; (&lt;html vf-no-js &gt;). If JS is enabled in a user&apos;s browser, .vf-no-js will be swapped to .vf-js. This method allows using CSS to conditionally show content.   Variants   Variant: Default live  Type: element  Nunjucks demo  Sample output     Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-no-js.css vf-no-js.js vf-no-js.scss File system location: components/vf-no-js ", "tags": "", "url": "/components/vf-no-js/index.html"},
{"id":"68", "title": "vf-page-header ", "text": "     Page Header Component About A simple combination of a heading and subheading for pages. Install This component is distributed with npm. After installing npm, you can install the vf-page-header with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: block  Nunjucks demo  Sample output   Strategy &amp; Communications Blog  Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-page-header.scss File system location: components/vf-page-header ", "tags": "", "url": "/components/vf-page-header/index.html"},
{"id":"69", "title": "vf-pagination ", "text": "     Pagination Component Install This repository is distributed with [npm][npm]. After [installing npm][install-npm], you can install primer-buttons with this command. Usage The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: block  Nunjucks demo  Sample output    Previous page  -10 page  1 page  2 page ...  17 page  Page 18  19 page ...  91 page  92 page  10 page  Next page   Sample output as HTML   Variant: Compact live  Type: block  Nunjucks demo  Sample output    Previous page  Next page   Sample output as HTML   Variant: Expanded live  Type: block  Nunjucks demo  Sample output    First page ...  6 page  7 page  8 page  Page 9  10 page ...  Last page   Sample output as HTML   Variant: First Last live  Type: block  Nunjucks demo  Sample output    First (1) page  Previous (5) page  Page 6  Next (7) page  Last (88) page   Sample output as HTML   Variant: Full live  Type: block  Nunjucks demo  Sample output   Generally reserved for deep and enganging databses of infromation, ulitmately you should try to avoid needing such a complex pager and mitigate through search and faceting filters.  Previous page  -10 page  Page 1  Page 2  ...  Page 17  Page 18  Page 19  ...  Page 91  Page 92  10 pages  Next page   Results per page  10 20 30 40 50     Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-pagination--full.scss vf-pagination.css vf-pagination.js vf-pagination.scss vf-pagination.variables.scss File system location: components/vf-pagination ", "tags": "", "url": "/components/vf-pagination/index.html"},
{"id":"70", "title": "vf-polyfill-js ", "text": "     VF JavaScript Polyfill Component This polyfills older browsers JS with things commonly needed in Visual Framework JavaScript (support for promises is a common need), this is also a general utility template to provide polyfill JS when most commonly needed. This components attempts to gracefully serve the JS to only the browsers that need it by using the nomodule attribute in script tags; as MDN web docs puts it: in effect, this can be used to serve fallback scripts to older browsers that do not support modular JavaScript code . We use polyfill bundling from Polyfill.io. This is is what it looks like: In effect, this provides better support to Internet Explorer and very old versions of Chrome, FireFox and Safari. Future plans In the future we may support passing parameters to the NJK template to load various mixes of polyfills. Install This repository is distributed with [npm][npm]. After [installing npm][install-npm], you can install vf-polyfill-js with this command. Usage The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default alpha  Type: utility  Sample output    Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-polyfill-js.css vf-polyfill-js.js vf-polyfill-js.scss vf-polyfill-js.variables.scss File system location: components/vf-polyfill-js ", "tags": "", "url": "/components/vf-polyfill-js/index.html"},
{"id":"71", "title": "vf-profile ", "text": "     vf-profile Component Installation This repository is distributed with npm. After installing npm and yarn, you can install vf-profile with this command. Usage The vf-profile component is to be used to display a persons details in small, compact display. This can be used on pages that display several team members and it can be used on a group home page to show the group leader. Content The vf-profile allows for a variety of content related to a person. content type variable description ", "tags": "", "url": "/components/vf-profile/index.html"},
{"id":"72", "title": "vf-sass-config ", "text": "     Sass Config and templates Mixins, functions and variables to power all vf-core components. If you&apos;re using a Visual Framework component it&apos;s a near-certainty that you&apos;ll need this component. Note: these utilise vf-design-tokens Functions set-color.scss set-color($color-name) map-deep-get.scss map-deep-get($map, $keys) set-layer.scss set-layer($layer) string-replace.scss str-replace($name, $number) Slice off the first amount($number) of characters from the $name value passed. Primarily used to replace the start of variables for the utility class generation. vf-functions.scss Rollup of all functions. Mixins blockquote.scss Reusable styling for html blockquote elements. @include blockquote; button.scss Reusable styling for button elements @include vf-button; divider.scss Reusable styling for divider elements and styling @include vf-divider; figure.scss Reusable styling for figures with optional caption styling @include figure($has-caption: true); helpers.scss Nothing, yet. links.scss Styling for links. @include inline-link( $vf-link--color: $vf-link--color, $vf-link--hover-color: $vf-link--hover-color, $vf-link--visited-color: $vf-link--visited-color, $vf-include-normalisations: $vf-include-normalisations); @include button-link( $vf-link--color: $vf-link--color, $vf-link--hover-color: $vf-link--hover-color, $vf-link--visited-color: $vf-link--visited-color); button-link--ghost( $vf-link--color: $vf-link--color, $vf-link--hover-color: $vf-link--hover-color, $vf-link--visited-color: $vf-link--visited-color); lists.scss Styling for list types @include($classname: optional-classname-to-usm, $type: null, unordered, ordered or inline); margin.scss Margin, recommended to use with sizing maps @include margin--block(bottom, map-get($vf-spacing-map, vf-spacing--lg)); margin-block: specify one value for bottom and top, top or bottom margin-all: specify one value for left or right, left or right margin: specify all or a value for each padding.scss Padding, recommended to use with sizing maps @include padding--block(bottom, map-get($vf-spacing-map, vf-spacing--lg)); padding-block: specify one value for bottom and top, top or bottom padding-all: specify one value for left or right, left or right padding: specify all or a value for each text-color.scss Currently not used. Intelligently pick if white or black should be used as a contrasting colour typography.scss Generate correct font information when included into an element. Recommended to use with typography and sizing maps @include set-type(text-body--3, $global-font-family, $custom-margin-bottom: vf-spacing--lg) utility--color.scss Generate lists of values in design token maps. Intended for use by the vf-utility-classes component utility--slide.scss A non-jitter causing way to slide elements up/down on hover. @include vf-slide-on-hover($shift-distance, $direction:up); utility--spacing.scss Generate lists of values in design token maps. Intended for use by the vf-utility-classes component utility--typography.scss Generate lists of values in design token maps. Intended for use by the vf-utility-classes component vf-mixins.scss Rollup of all mixins. vf-utility-mixins.scss Rollup of all utility mixins. vf-disabled.scss For disable link elements, actions @include vf-disabled($vf-link--disabled-color); Variables vf-global-custom-properties.scss Native CSS properties, currently limited to document spacing. vf-global-variables.scss Global Sass variable defaults for the high-level page look of typography, page width, deprecated component text, if normalisations should be included. vf-variables.scss Rollup of global Sass variables. Install This repository is distributed with [npm][npm]. After [installing npm][install-npm], you can install vf-sass-config and its dependencies with this command. You might also find the the vf-sass-starter a useful starting point for setting up a customised Sass build. Usage The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: utility  Sample output     Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-sass-config.css File system location: components/vf-sass-config ", "tags": "", "url": "/components/vf-sass-config/index.html"},
{"id":"73", "title": "vf-sass-starter ", "text": "     Sass starter utility Usage This Package is to get your project up and running with the minimum Sass files and dependencies you may require. Install This repository is distributed with npm. After installing npm and yarn, you can install vf-sass-starter and its dependencies with this command. Sass The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. The above index.scss file will import the Design Tokens, the Sass variables, mixins, functions to get you started as well as importing the CSS Utility Classes, the Utilities, and the Font CSS for IBM Plex Mono and IBM Plex Sans. If you do not require this you can create your own @imports removing what you want from this list: Help Read the Visual Framework troubleshooting Open a ticket Chat on Slack   Variants   Variant: Default alpha  Type: utility  Sample output     Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-sass-starter.css File system location: components/vf-sass-starter ", "tags": "", "url": "/components/vf-sass-starter/index.html"},
{"id":"74", "title": "vf-sass-utilities ", "text": "     Sass Utilities component This component has been deprecated. Please use the vf-utility-classes component. The utility classes here have been moved to the vf-utility-classes component. This is a (growing) collection of utility-case Sass. Note that this differs from vf-utility-classes as these are not isolated settings (top margin, hide from display, green colour) but rather express a useful behaviour, such as showing some content exclusively for screen readers. Install This repository is distributed with [npm][npm]. After [installing npm][install-npm], you can install vf-sass-utilities with this command. Usage The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default deprecated  Type: deprecated  Nunjucks demo  Sample output   Available Sass utilities Et al. .vf-et-al for use in publications lists and similar Jon Smith, Jane Johnson, Screenreader text .vf-sr-only some things should only be shown to screen readers Like this text No-wrap. .vf-no-wrap keep text together, as much as possible I&apos;m some words that can break awkwardly but keep the Company Name together.   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md _vf-et-al.scss _vf-no-wrap.scss _vf-screen-reader.scss vf-sass-utilities.css vf-sass-utilities.scss vf-sass-utilities.variables.scss File system location: components/vf-sass-utilities ", "tags": "", "url": "/components/vf-sass-utilities/index.html"},
{"id":"75", "title": "vf-search ", "text": "     Search Component Install This repository is distributed with [npm][npm]. After [installing npm][install-npm], you can install primer-buttons with this command. Usage The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default beta  Type: block  Nunjucks demo  Sample output   Search Search  Sample output as HTML   Variant: Inline beta  Type: block  Nunjucks demo  Sample output   Inline search Search  Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-search.css vf-search.js vf-search.scss vf-search.variables.scss File system location: components/vf-search ", "tags": "", "url": "/components/vf-search/index.html"},
{"id":"76", "title": "vf-search-client-side ", "text": "     vf-search-client-side Component This uses Lunr.js to perform a client-side search of a site&apos;s content. This is recommended only for sites with a limited number of pages. It consumes a .js file with an object of pages, a la: Building a search index To generate that JS file, if you&apos;re using a vf-eleventy based site, you may also want to make use of the vf-extensions&apos;s gulp-build-search-index.js: require(&apos;./node_modules/\@visual-framework/vf-extensions/utils/gulp-build-search-index.js&apos;)(gulp, path, buildDestionation); And you should build that search index after updating your html pages, a la: Using search You can pass a query to the search page with ?search_query=myQuery The search will live update as the user enters text To do This is an early alpha. More customisation options need to be added, such as: passing search paramaters (boost score) to the JS customising the output format NJK template has hardcoded paths for vf-core Install This repository is distributed with [npm][npm]. After [installing npm][install-npm], you can install vf-search-client-side with this command. Usage The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import any requirements along with the modules.  Variants   Variant: Default alpha  Type: block  Nunjucks demo  Sample output    Search Loading...   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-search-client-side.css vf-search-client-side.js vf-search-client-side.scss vf-search-client-side.variables.scss File system location: components/vf-search-client-side ", "tags": "", "url": "/components/vf-search-client-side/index.html"},
{"id":"77", "title": "vf-section-header ", "text": "     Section Header Component About For use in labeling a section of content, often containers. Install This component is distributed with npm. After installing npm, you can install the vf-section-header with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: block  Nunjucks demo  Sample output   Projects  Sample output as HTML   Variant: Is A Link live  Type: block  Nunjucks demo  Sample output   Projects  Sample output as HTML   Variant: Has A Sub Heading live  Type: block  Nunjucks demo  Sample output   Projects News from EMBL&#x2019;s six sites   Sample output as HTML   Variant: Has A Sub Heading And Link live  Type: block  Nunjucks demo  Sample output   Projects News from EMBL&#x2019;s six sites   Sample output as HTML   Variant: Has A Sub Heading And Link And Text live  Type: block  Nunjucks demo  Sample output   Projects News from EMBL&#x2019;s six sitesHello everyone who are doing?Pizza   Sample output as HTML   Variant: Has A Link And Text live  Type: block  Nunjucks demo  Sample output   Projects Hello everyone who are doing?Pizza   Sample output as HTML   Variant: Has Text live  Type: block  Nunjucks demo  Sample output   Projects Hello everyone who are doing?Pizza   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-section-header.scss File system location: components/vf-section-header ", "tags": "", "url": "/components/vf-section-header/index.html"},
{"id":"78", "title": "vf-show-more ", "text": "     vf-show-more Component Usage data-vf-js-show-more The containing element, does not have to be a direct parent data-vf-js-show-more-pager-size=3 The number of items to show on first page load vf-show-more__item Items to be shown hidden (display done with CSS) data-vf-js-show-more-button The button to show more data-vf-js-show-more-button--less The button to show less, optional An overview of the HTML strcuture A condensed example. Future development Pager support Currently designed to work with pre-loaded HTML. It should be possible to use it with lazy-loaded HTML with a few considerations. Install This repository is distributed with [npm][https://www.npmjs.com/]. After [installing npm][https://www.npmjs.com/get-npm] and yarn, you can install vf-show-more with this command. JS You should import this component in ./components/vf-component-rollup/scripts.js or your other JS process: Sass/CSS If your component uses Sass: The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules. Help Read the Visual Framework troubleshooting Open a ticket Chat on Slack   Variants   Variant: Default alpha  Type: container  Nunjucks demo  Sample output   Show more demo     Show more Show less  Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-show-more.css vf-show-more.js vf-show-more.scss vf-show-more.variables.scss File system location: components/vf-show-more ", "tags": "", "url": "/components/vf-show-more/index.html"},
{"id":"79", "title": "vf-social-links ", "text": "     vf-social-links Component Usage Variants Available vf-social-links--outline this removes the background and gives a border around each icon square. dark-mode if this is insdie a component that has dark-mode theeme then the colours swap. SVG You will need to make sure the SVG code below is added somewhere in your HTML (preferably at the top). This is in leiu of an icon system for you to pull things in automatically. Install This repository is distributed with [npm][https://www.npmjs.com/]. After [installing npm][https://www.npmjs.com/get-npm] and yarn, you can install vf-social-links with this command. JS If your component uses JS: You should import this component in ./components/vf-component-rollup/scripts.js or your other JS process: Sass/CSS If your component uses Sass: The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules. Help Read the Visual Framework troubleshooting Open a ticket Chat on Slack   Variants   Variant: Default alpha  Type: block  Nunjucks demo  Sample output       Follow us  twitter   facebook   instagram   youtube   linkedin    Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-social-links.css vf-social-links.js vf-social-links.scss vf-social-links.variables.scss File system location: components/vf-social-links ", "tags": "", "url": "/components/vf-social-links/index.html"},
{"id":"80", "title": "vf-stack ", "text": "     vf-stack Component Usage This can be used to set the flow of child components. Some (and soon all) vf-core components will come without any margin spacing (this is to avoid adding margins where it is not needed). You can add the vf-stack class name to existing containers (like vf-content) or containers you create yourself in your codebase. Note: vf-grid (1.0.0) and embl-grid (2.0.1) now automaticaly add gaps to their child elements as needed. So you should not use vf-stack alongside these. Install This repository is distributed with [npm][https://www.npmjs.com/]. After [installing npm][https://www.npmjs.com/get-npm] and yarn, you can install vf-stack with this command. Sass/CSS If your component uses Sass: The source files included are written in Sass (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules. Variants We use CSS custom properties to control this vertical rhythm. For browsers that do not support CSS custom properties (IE 11) we provide a default value of 1rem so that child components get some spacing. This value is overriden by browsers that understand CSS custom properties. variant name description ", "tags": "", "url": "/components/vf-stack/index.html"},
{"id":"81", "title": "vf-summary ", "text": "     Summary Component About Summaries in the form of text, headlines and often imagery for a range of types of content, including: articles, jobs, news and people profiles. The vf-summary--profile component has been deprecated. Please use the vf-profile component. Publications Summary The vf-summary--publication can be nested inside a vf-box where it takes the vf-box colours. If the vf-summary__author list is truncated to a certain number of authors you will need to add vf-u-text--et-al to the &lt;p&gt; - &lt;p vf-summary__author | vf-u-text--et-al &gt; - for it to add et al to the end of the list. Install This component is distributed with npm. After installing npm, you can install the vf-summary with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: block  Nunjucks demo  Sample output   What is Cancer? Cancer is a group of diseases involving abnormal cell growth with the potential to invade or spread to other parts of the body.  Sample output as HTML   Variant: Profile live  Type: block  Nunjucks demo  Sample output   FirstName Surname EMBL Press Office contact@persons.com  +49 6221 387 8443  +49 1758 991 179  ORCID: 0000 - 1234 - 4326 - XX03  Sample output as HTML   Variant: Large live  Type: block  Nunjucks demo  Sample output   What is Cancer? Cancer is a group of diseases involving abnormal cell growth with the potential to invade or spread to other parts of the body.  Sample output as HTML   Variant: Regular live  Type: block  Nunjucks demo  Sample output   What is Cancer? Cancer is a group of diseases involving abnormal cell growth with the potential to invade or spread to other parts of the body.  Sample output as HTML   Variant: Small live  Type: block  Nunjucks demo  Sample output   What is Cancer? Cancer is a group of diseases involving abnormal cell growth with the potential to invade or spread to other parts of the body.  Sample output as HTML   Variant: Article live  Type: block  Nunjucks demo  Sample output    EMBL&apos;s top social media posts of 2017 and what we learned from them Laura Howes 06 February 2018 Leave Comment I want to take a look back at my first full year as EMBL&apos;s social media manager. So what worked best over 2017 and what can I learn from this? My basic goals for VF&#x2019;s social media are to build community and develop a shared understanding of who we as an organisation are. Consequently, I care about what resonates on the different social sites much more than driving traffic back to Visual Framework websites, although traffic is obviously a by-product.   Sample output as HTML   Variant: Event live  Type: block  Nunjucks demo  Sample output   04 September Executive Masters in Management of Research Infrastructures This Masters development programme is aimed at current Research Infrastructures managers and leaders who wish to develop the competencies required to meet the needs of Research Infrastructures in the planning, construction and operation phases. EMBO Workshop Heidelberg   Sample output as HTML   Variant: Event Easy live  Type: block  Nunjucks demo  Sample output   04 September EMBL Course: Data Visualisation for Biology: A Practical Workshop on Design, Techniques and Tools EMBO Workshop Heidelberg   Sample output as HTML   Variant: Has Image live  Type: block  Nunjucks demo  Sample output    BioSamples A database describing biological samples and providing links to associated experimental data. Imageless sample Not all lists with images have an image for every item.  Sample output as HTML   Variant: Job live  Type: block  Nunjucks demo  Sample output   Science Faculty in Heidelberg  Group Leader - Cell and Biophysics We are seeking to recruit outstanding group leaders who wish to carry out cutting-edge molecular cell biology research and/or technology development. Apply Now Closes in 8 days. Posted 11th August 2018   Sample output as HTML   Variant: News live  Type: block  Nunjucks demo  Sample output   22 June 2018 What is Cancer?  General Combinations of cancer drugs can be quickly and cheaply tested using a novel microfluidic device.  Sample output as HTML   Variant: News Has Image live  Type: block  Nunjucks demo  Sample output   22 June 2018 What is Cancer? Combinations of cancer drugs can be quickly and cheaply tested using a novel microfluidic device.  Sample output as HTML   Variant: Publication live  Type: block  Nunjucks demo  Sample output    Computer modeling in developmental biology: growing today, essential tomorrow. Jimenez RC, Albar JP, Bhak J, Blatter MC, Blicher T, Brazas MD, Brooksbank C, Budd A, De Las Rivas J, Dreyer J, van Driel MA, Dunn MJ, Fernandes PL, van Gelder CW, Hermjakob H, Ioannidis V, Judge DP, Kahlem P, Korpelainen E, Kraus HJ, Loveland J, Mayer C, McDowall J, Moran F, Mulder N, Nyronen T, Rother K, Salazar GA, Schneider R, Via A, Villaveces JM, Yu P, Schneider MV, Attwood TK, Corpas M.  The Journal of cell biology 2019 144(23):4214-4225. doi: 10.1242/dev.151274. Europe PMC  Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-summary--article.scss vf-summary--event.scss vf-summary--has-image.scss vf-summary--job.scss vf-summary--news.scss vf-summary--profile.scss vf-summary--publication.scss vf-summary.css vf-summary.scss vf-summary.variables.scss File system location: components/vf-summary ", "tags": "", "url": "/components/vf-summary/index.html"},
{"id":"82", "title": "vf-summary-container ", "text": "     Summary Container Component About An arrangement of vf-summary in a three-column container. Install This component is distributed with npm. After installing npm, you can install the vf-summary-container with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: container  Nunjucks demo  Sample output   Projects What is Cancer? Cancer is a group of diseases involving abnormal cell growth with the potential to invade or spread to other parts of the body. Cancer and EMBL EMBL researchers use both computational and traditional lab research to try and understand why cancer happens and how cancer grows and spreads. They can sample and test how tumours and drugs react and find unique molecular data to identify diseases. What does Cancer look like? Cancer is caused by uncontrolled cell division. These cells are tiny, but but can quickly add up and cancerous cells can look very different from healthy ones.   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-summary-container.css vf-summary-container.scss File system location: components/vf-summary-container ", "tags": "", "url": "/components/vf-summary-container/index.html"},
{"id":"83", "title": "vf-table ", "text": "     vf-table Component CSS Class Reference Class Applie To Result ", "tags": "", "url": "/components/vf-table/index.html"},
{"id":"84", "title": "vf-tabs ", "text": "     Tabs Component About The ever-useful tabs. This component works best with the included JS, but you can use the CSS styling on other tab sets, like Bootstrap tabs. Install This component is distributed with npm. After installing npm, you can install the vf-tabs with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: block  Nunjucks demo  Sample output   Section A Short Section A Rather Long Section Nested Tabs A Rather Long Section A Rather Long Section Section 1 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam euismod, tortor nec pharetra ultricies, ante erat imperdiet velit, nec laoreet enim lacus a velit. Nam luctus, enim in interdum condimentum, nisl diam iaculis lorem, vel volutpat mi leo sit amet lectus. Praesent non odio bibendum magna bibendum accumsan.  Section 2 Nullam at diam nec arcu suscipit auctor non a erat. Sed et magna semper, eleifend magna non, facilisis nisl. Proin et est et lorem dictum finibus ut nec turpis. Aenean nisi tortor, euismod a mauris a, mattis scelerisque tortor. Sed dolor risus, varius a nibh id, condimentum lacinia est. In lacinia cursus odio a aliquam. Curabitur tortor magna, laoreet ut rhoncus at, sodales consequat tellus.  Section 3 Phasellus ac tristique orci. Nulla maximus justo nec dignissim consequat. Sed vehicula diam sit amet mi efficitur vehicula in in nisl. Aliquam erat volutpat. Suspendisse lorem turpis, accumsan consequat consectetur gravida, pellentesque ac ante. Aliquam in commodo ligula, sit amet mollis neque. Vestibulum at facilisis massa.  Section 4  Nested tab 1  Nested tab 2 Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nam euismod, tortor nec pharetra ultricies, ante erat imperdiet velit, nec laoreet enim lacus a velit. Nam luctus, enim in interdum condimentum, nisl diam iaculis lorem, vel volutpat mi leo sit amet lectus. Praesent non odio bibendum magna bibendum accumsan.  Nullam at diam nec arcu suscipit auctor non a erat. Sed et magna semper, eleifend magna non, facilisis nisl. Proin et est et lorem dictum finibus ut nec turpis. Aenean nisi tortor, euismod a mauris a, mattis scelerisque tortor. Sed dolor risus, varius a nibh id, condimentum lacinia est. In lacinia cursus odio a aliquam. Curabitur tortor magna, laoreet ut rhoncus at, sodales consequat tellus. Section 3 Phasellus ac tristique orci. Nulla maximus justo nec dignissim consequat. Sed vehicula diam sit amet mi efficitur vehicula in in nisl. Aliquam erat volutpat. Suspendisse lorem turpis, accumsan consequat consectetur gravida, pellentesque ac ante. Aliquam in commodo ligula, sit amet mollis neque. Vestibulum at facilisis massa.  Section 3 Phasellus ac tristique orci. Nulla maximus justo nec dignissim consequat. Sed vehicula diam sit amet mi efficitur vehicula in in nisl. Aliquam erat volutpat. Suspendisse lorem turpis, accumsan consequat consectetur gravida, pellentesque ac ante. Aliquam in commodo ligula, sit amet mollis neque. Vestibulum at facilisis massa.  Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-tabs.css vf-tabs.js vf-tabs.scss File system location: components/vf-tabs ", "tags": "", "url": "/components/vf-tabs/index.html"},
{"id":"85", "title": "vf-text ", "text": "     Text Component About For basic text formatting and sizes. Install This component is distributed with npm. After installing npm, you can install the vf-text with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default live  Type: element  Nunjucks demo  Sample output     Sample output as HTML   Variant: Extra Large live  Type: element  Nunjucks demo  Sample output   This text is extra large   Sample output as HTML   Variant: Large live  Type: element  Nunjucks demo  Sample output   This text is large   Sample output as HTML   Variant: Regular live  Type: element  Nunjucks demo  Sample output   This text is regular   Sample output as HTML   Variant: Small live  Type: element  Nunjucks demo  Sample output   This text is small   Sample output as HTML   Variant: Extra Small live  Type: element  Nunjucks demo  Sample output   This text is extra small   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-text.css vf-text.scss File system location: components/vf-text ", "tags": "", "url": "/components/vf-text/index.html"},
{"id":"86", "title": "vf-tree ", "text": "     vf-tree Component A collapsable tree list suited for list displays or deep navigation structures. There are several paramaters availabl when using the Nunjucks template: expanded: true Control if the entire tree is expanded/collpased sublist if an object of titles the item will be shown as a group artiveTrail: true Highlights a tree as an active path and if it is a sublist, opens it Install This repository is distributed with [npm][npm]. After [installing npm][install-npm], you can install vf-tree with this command. Usage The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Collapsible tree beta  Type: block  Nunjucks demo  Sample output    navigation-left-2  Course Overview  What is bioinformatics? arrow-right-1 Subitems  The role of public databases arrow-right-1 Subitems  What makes a good bioinformatics database? arrow-right-1 Primary and secondary databases  Describing data consistently  Minimum information standards  Controlled vocabularies arrow-right-1 Non-heirarchial list  Taxonomy  Thesaurus  Gene Ontology   Tips on managing and sharing data? arrow-right-1 Subitems  Where do I submit my data? arrow-right-1 Subitems  Using ontologies to provide controlled vocabularies arrow-right-1 Subitems  Summary arrow-right-1 Subitems  Get help and support arrow-right-1 Subitems    Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-tree.css vf-tree.js vf-tree.scss vf-tree.variables.scss File system location: components/vf-tree ", "tags": "", "url": "/components/vf-tree/index.html"},
{"id":"87", "title": "vf-u-fullbleed ", "text": "     Full Bleed Utility About This utility class allows you to make a container take the full width of the viewport available but keep the content set to the maximum width of the grid. As we should be relying on vf-grid, embl-grid, or a container to make sure the content is centered with a maximum width of 76.5em we use the ::before pseudo element to allow the background colour to &apos;bleed out&apos; and fill any space avaiable. For this to work you need to make sure that the parent element you place the class .vf-u-fullbleed has to have a background colour. This can be done either by: using a container component that has a defined background colour. using a background colour utility class. For example: Notes: Browsers running on Windows tend to have scrollbars always showing. There is a small bug with the vw unit where the calculations leading to 100vw could create a horizontal scroll bar. To avoid this, without using JavaScript. We need to apply the CSS rule of overflow-x: hidden; to a parent element. As we are making all components their own installable package we have added the required CSS to this component rather than relying on additional packages. Making use of Sass @at-root directive and defining what element to add the rule too. The variable used for this is $vf-u-fullbleed-parent. This is set to body as the default but can be overridden in your projects overriding Sass variables file (which needs to be near the top of the import file). This has been test with sites using VF1.x and no problems have been found. If you find an issue with this component being used alongside pages built with VF1.x please raise an issue. Install This repository is distributed with [npm][npm]. After [installing npm][install-npm], you can install vf-u-fullbleed with this command. Usage The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default alpha  Type: utility  Sample output   Hellow World Lorem ipsum dolor sit amet, consectetur adipisicing elit. Architecto earum vero laudantium quia officiis cum nemo autem reprehenderit, praesentium rerum vel! Ducimus, ullam impedit tempore vel, ipsam magnam quos voluptatum! Lorem ipsum dolor sit amet, consectetur adipisicing elit. Sed alias, minima omnis possimus aut aliquam commodi, molestias repellat tempore nobis deserunt quis quod maiores inventore debitis in vitae aspernatur dolores. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Voluptas nostrum iste, aut dolor sapiente quos at neque, non! Voluptas eveniet quia laboriosam eligendi architecto qui minima corrupti velit consectetur. Temporibus?  Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-u-fullbleed.css vf-u-fullbleed.js vf-u-fullbleed.scss vf-u-fullbleed.variables.scss File system location: components/vf-u-fullbleed ", "tags": "", "url": "/components/vf-u-fullbleed/index.html"},
{"id":"88", "title": "vf-utility-classes ", "text": "     Utility Classes About Utility Classes provide the building blocks for layout and handle a range common use cases that help us avoid writing custom styles. When we need to add some margin or padding, rather than adding a new selector specific to that use case, we can use utilities. This helps us reduce the number of unique property-value pairs, and helps us keep more consistent styles across the site. Utility Classes are designed to do one job well and one job only, are immutable, and on occasion are an acceptable approach to overriding component styles. Utility Classes should clearly describe the job they do. Utility Classes are to be namespaced with vf-u- Install This component is distributed with npm. After installing npm, you can install the vf-utility-classes with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Misc live  Type: utility  Sample output   Et al. .vf-u-text--et-al for use in publications lists and similar Jon Smith, Jane Johnson, Screenreader text .vf-u-sr-only some things should only be shown to screen readers Like this text No wrap .vf-u-text--nowrap keep text together, as much as possible I&apos;m some words that can break awkwardly but keep the Company Name together. Break text .vf-u-text--break break long strings of text Here&apos;s some long text that would otherwise run off the side of the page evock2OTIhUP5N9ZgsNCzgYrfFuKd3ktVLTYnVTfX1NPpzjxmYC0RwLiOxwqi7n7VLWgRFUiTa7UK77exxWkpbJwLoERCAU5L0Z8ebvYpjKCtCboKgAxYx4CxmlsP3U66rabF3nxA6sNDhZnYWW6zr1QfR7J7nzKhQG9P2oSnOFNoK7xPr6hgxpePl3Jq9Ml2n5eAeV6evock2OTIhUP5N9ZgsNCzgYrfFuKd3ktVLTYnVTfX1NPpzjxmYC0RwLiOxwqi7n7VLWgRFUiTa7UK77exxWkpbJwLoERCAU5L0Z8ebvYpjKCtCboKgAxYx4CxmlsP3U66rabF3nxA6sNDhZnYWW6zr1QfR7J7nzKhQG9P2oSnOFNoK7xPr6hgxpePl3Jq9Ml2n5eAeV6. Text-colours Same colour options as background colours, with a prefix of Text and heading sizes Text: From 1 to 6, with 1 being the largest. Button: From 1 to 2, with 1 being the largest. Heading: From 1 to 5, with 1 being the largest. Grid layout Visibility Margins In t-shirt sizes from 0,xs, sm, md, lg, xl, xl, xxl Padding In t-shirt sizes from 0,xs, sm, md, lg, xl, xl, xxl Todo: This should be autogenerated from the Sass, but to best do that we might look at some sort of css documentation tool.   Sample output as HTML   Variant: Background live  Type: utility  Sample output   Background Colours .vf-u-background-color--green .vf-u-background-color--green--darkest .vf-u-background-color--green--dark .vf-u-background-color--green--light .vf-u-background-color--green--lightest .vf-u-background-color--grey .vf-u-background-color--grey--darkest .vf-u-background-color--grey--dark .vf-u-background-color--grey--light .vf-u-background-color--grey--lightest .vf-u-background-color--red .vf-u-background-color--red--dark .vf-u-background-color--red--light .vf-u-background-color--blue .vf-u-background-color--blue--dark .vf-u-background-color--blue--light .vf-u-background-color--purple .vf-u-background-color--purple--dark .vf-u-background-color--purple--light .vf-u-background-color--orange .vf-u-background-color--orange--dark .vf-u-background-color--orange--light .vf-u-background-color--yellow .vf-u-background-color--yellow--dark .vf-u-background-color--yellow--light .vf-u-background-color--bright-green .vf-u-background-color--bright-green--dark .vf-u-background-color--bright-green--light .vf-u-background-color-ui--black .vf-u-background-color-ui--grey .vf-u-background-color-ui--grey--light .vf-u-background-color-ui--yellow .vf-u-background-color-ui--red .vf-u-background-color-ui--white .vf-u-background-color-ui--off-white   Sample output as HTML   Variant: Border live  Type: utility  Sample output   Border colours .vf-u-border-color--green .vf-u-border-color--green--darkest .vf-u-border-color--green--dark .vf-u-border-color--green--light .vf-u-border-color--green--lightest .vf-u-border-color--grey .vf-u-border-color--grey--darkest .vf-u-border-color--grey--dark .vf-u-border-color--grey--light .vf-u-border-color--grey--lightest .vf-u-border-color--red .vf-u-border-color--red--dark .vf-u-border-color--red--light .vf-u-border-color--blue .vf-u-border-color--blue--dark .vf-u-border-color--blue--light .vf-u-border-color--purple .vf-u-border-color--purple--dark .vf-u-border-color--purple--light .vf-u-border-color--orange .vf-u-border-color--orange--dark .vf-u-border-color--orange--light .vf-u-border-color--yellow .vf-u-border-color--yellow--dark .vf-u-border-color--yellow--light .vf-u-border-color--bright-green .vf-u-border-color--bright-green--dark .vf-u-border-color--bright-green--light .vf-u-border-color-ui--black .vf-u-border-color-ui--grey .vf-u-border-color-ui--grey--light .vf-u-border-color-ui--yellow .vf-u-border-color-ui--red .vf-u-border-color-ui--white .vf-u-border-color-ui--off-white   Sample output as HTML   Variant: Float live  Type: utility  Sample output   Layout Floats Use the utility clasees .vf-u-float__left and .vf-u-float__right to set elements to float. Use .vf-u-clearfix to clear elements if needed on the parent element. .vf-u-float__left Lorem ipsum dolor sit .vf-u-float__right Lorem ipsum dolor sit .vf-u-float__none Lorem ipsum dolor sit  Responsive Floats At 360px .vf-u-float__left--xs Lorem ipsum dolor sit .vf-u-float__right--xs Lorem ipsum dolor sit .vf-u-float__none--xs Lorem ipsum dolor sit  At 699px .vf-u-float__left--sm Lorem ipsum dolor sit .vf-u-float__right--sm Lorem ipsum dolor sit .vf-u-float__none--sm Lorem ipsum dolor sit  At 800px .vf-u-float__left--md Lorem ipsum dolor sit .vf-u-float__right--md Lorem ipsum dolor sit .vf-u-float__none--md Lorem ipsum dolor sit  At 1024px .vf-u-float__left--lg Lorem ipsum dolor sit .vf-u-float__right--lg Lorem ipsum dolor sit .vf-u-float__none--lg Lorem ipsum dolor sit  At 1200px .vf-u-float__left--xl Lorem ipsum dolor sit .vf-u-float__right--xl Lorem ipsum dolor sit .vf-u-float__none--xl Lorem ipsum dolor sit    Sample output as HTML   Variant: Grid live  Type: utility  Sample output   .vf-u-grid__col--span-1--xs .vf-u-grid__col--span-2--xs .vf-u-grid__col--span-3--xs .vf-u-grid__col--span-1--sm .vf-u-grid__col--span-2--lg .vf-u-grid__col--span-3--xl  .vf-u-grid__col--span-1--sm .vf-u-grid__col--span-2--lg .vf-u-grid__col--span-3--xl  .vf-u-grid__col--span-1--sm .vf-u-grid__col--span-2--lg .vf-u-grid__col--span-3--xl  Sample output as HTML   Variant: Grid Gap live  Type: utility  Sample output   Grid Gap vf-u-grid-gap .vf-u-grid-gap--xs   .vf-u-grid-gap--sm   .vf-u-grid-gap--md   .vf-u-grid-gap--lg   .vf-u-grid-gap--xl   .vf-u-grid-gap--xxl    vf-u-grid-column-gap .vf-u-grid-gap--xs   .vf-u-grid-gap--sm   .vf-u-grid-gap--md   .vf-u-grid-gap--lg   .vf-u-grid-gap--xl   .vf-u-grid-gap--xxl    vf-u-grid-row-gap .vf-u-grid-gap--xs   .vf-u-grid-gap--sm   .vf-u-grid-gap--md   .vf-u-grid-gap--lg   .vf-u-grid-gap--xl   .vf-u-grid-gap--xxl    Sample output as HTML   Variant: Width live  Type: utility  Sample output   Width Use the utility clasees .vf-u-width__20 to set responive width in 5 percentage increments. .vf-u-width__5  .vf-u-width__10  .vf-u-width__15  .vf-u-width__20  .vf-u-width__30  .vf-u-width__40  And so on up to 100. Responsive You can also make these conditional on screen size with --xs, --sm, --md, --lg or --xl.  .vf-u-width__20--sm  .vf-u-width__20--xl    Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-u-float.scss vf-u-grid.scss vf-u-screen-reader.scss vf-u-text.scss vf-u-width.scss vf-utility-classes.css vf-utility-classes.scss File system location: components/vf-utility-classes ", "tags": "", "url": "/components/vf-utility-classes/index.html"},
{"id":"89", "title": "vf-video ", "text": "     Video Component About Install This component is distributed with npm. After installing npm, you can install the vf-video with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default beta  Type: block  Nunjucks demo  Sample output     Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-video.css vf-video.scss File system location: components/vf-video ", "tags": "", "url": "/components/vf-video/index.html"},
{"id":"90", "title": "vf-video-container ", "text": "     Video Container Component About Install This component is distributed with npm. After installing npm, you can install thevf-video-container` with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default beta  Type: container  Nunjucks demo  Sample output   Projects More on our YouTube channel New theory deepens understanding of Turing patterns   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-video-container.css vf-video-container.scss File system location: components/vf-video-container ", "tags": "", "url": "/components/vf-video-container/index.html"},
{"id":"91", "title": "vf-video-teaser ", "text": "     Vide Teaser Component About Install This component is distributed with npm. After installing npm, you can install the vf-video-teaser with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default beta  Type: block  Nunjucks demo  Sample output   More on our YouTube channel New theory deepens understanding of Turing patterns  Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-video-teaser.css vf-video-teaser.scss File system location: components/vf-video-teaser ", "tags": "", "url": "/components/vf-video-teaser/index.html"},
{"id":"92", "title": "I&#39;m an update ", "text": "  Hello, world! This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information. It uses utility classes for typography and spacing to space content out within the larger container. Learn more Lot&apos;s more Bootstrap components to try out here ", "tags": "", "url": "/demos/integration-bootstrap/index.html"},
{"id":"93", "title": "I&#39;m pure 2.0 ", "text": "   ", "tags": "", "url": "/demos/integration-pure/index.html"},
{"id":"94", "title": "I&#39;m an update ", "text": "       EBI Framework   Overview Download Support     EBI Framework  Sample pages Current: Blank boilerplate   EBI Boilerplate + jobs widget A quick port of https://www.ebi.ac.uk/style-lab/websites/sample-site/boilerplate/blank.html Lot&apos;s more VF 1.x components to try out here.        ", "tags": "", "url": "/demos/integration-vf1/index.html"},
{"id":"95", "title": "Boilerplate for a generic page ", "text": "  Visual Framework for Life Science websites services  research  training  about us   Don&apos;t need to customise the EMBL Design Language for Websites? Here&apos;s the core CSS and JS you need. Don&apos;t forget to consult the component library.  Cancer alpha Cancer is a generic term for lots of different diseases in which cells divide many more times than usual. This abnormal growth can affect many cell types in almost any part of the body. Cancer is a multi-stage process. Normal cells begin to divide abnormally, spreading beyond their normal boundaries, and abnormal tissue growth causes swellings called tumours to form. Tumours can be benign &#x2013; with no harmful effect on the body &#x2013; or malignant, invading healthy tissue and interfering with normal bodily functions.There are more than 100 types of cancer and symptoms vary depending on the type. Read more about Cancer.  A description of a site or organisation and what its goals are. Category  A link   Another link   Third link   Category  Entry   Entry   Entry   Entry   Entry   Category  Entry   Entry   Entry   Category  Entry   Entry   Entry   Category  Entry   Entry   Entry    Entry  Entry  Entry  Copyright &#xA9; Your Organisation. Maybe an address too, 5555, Somewhere, Earth. Tel: +49 00 000 000. Another entry  ", "tags": "", "url": "/patterns/boilerplate-generic/index.html"},
{"id":"96", "title": "Navigation ", "text": "  Navigation The Visual Framework favours a container-based navigation system.  Instead of nested menus, the Visual Framework is designed to facilitate structure and navigation through a series of stackable containers. This simplifies the UX and makes reorganising pages simpler. ", "tags": "", "url": "/patterns/navigation/index.html"},
{"id":"97", "title": "I&#39;m an update ", "text": "  I&apos;m an update I&apos;m some content. ", "tags": "", "url": "/posts/sample-post/index.html"},
{"id":"98", "title": "vf-location-nearest ", "text": "     Nearest location component Usage From a list of lat and long, this will use the browser geolcation API to select the nearest. It also provides a manual selection fallback and override. This component is purely JavaScript and relies on other components to provide UI and to consume the detected region. This is an early version, some future improvements to be considered: Callback to observe detected locations to be used in other components Allowing or matches for content data-vf-js-location-nearest-activation-target= locationOne, locationTwo Enabling the default while we wait for geodetection Saving a user&apos;s location when using the override Install This repository is distributed with [npm][https://www.npmjs.com/]. After [installing npm][https://www.npmjs.com/get-npm] and yarn, you can install vf-location-nearest with this command. JS You should import this component in ./components/vf-component-rollup/scripts.js or your other JS process: JS Data attributes All are optional data-vf-js-location-nearest-name element will receive the name of the current location data-vf-js-location-nearest-override-widget element will be populated with an override widget (vf-form select list) data-vf-js-location-nearest-activation-target= {locationId} will receive clicks on location change. This is a simple method to activate diverse elements. Sass/CSS If your component uses Sass: The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules. Help Read the Visual Framework troubleshooting Open a ticket Chat on Slack   Variants   Variant: Default alpha  Type: utility  Sample output   /* This is a demo only, to use this utility component follow the README.md to graft onto your UI */ Detected location Your detected city is: loading Available locations loading Element activation Elements tagged with data-vf-js-location-nearest-activation-target= {locationId} will receive clicks on location change. This is a simple method to activate diverse elements.  Default  Grenoble  A sample data-vf-js-location-nearest-activation-target=&apos;default&apos; activation target  A sample data-vf-js-location-nearest-activation-target=&apos;grenoble&apos; activation target   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-location-nearest.css vf-location-nearest.js vf-location-nearest.scss vf-location-nearest.variables.scss File system location: components/vf-location-nearest ", "tags": "", "url": "/components/vf-location-nearest/index.html"},
{"id":"99", "title": "preview ", "text": "     Preview  Variants   Variant: Default alpha  Type: undefined  Nunjucks demo  Sample output   | Visual Framework component library   , ", "tags": "", "url": "/components/preview/preview/index.html"},
{"id":"100", "title": "vf-form__checkbox ", "text": "     Form Checkbox Component About Install This component is distributed with npm. After installing npm, you can install the vf-form__checkbox with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default alpha  Type: element  Nunjucks demo  Sample output   Form Label  Sample output as HTML   Variant: Inline alpha  Type: element  Nunjucks demo  Sample output   Form Label  Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-form__checkbox.css vf-form__checkbox.scss File system location: components/vf-form__checkbox ", "tags": "", "url": "/components/vf-form/vf-form__checkbox/index.html"},
{"id":"101", "title": "vf-form__core ", "text": "     Form Component Usage vf-form__input Use these when you need short answers to questions in your form. If you need the user to write more longer pieces of text then make use of &lt;textarea vf-form__textarea &gt;&lt;/textarea&gt;. Make sure your text inputs have the relevant labels (using &lt;label vf-fprm__label &gt;&lt;/label&gt;) and helper text (using &lt;p vf-form__helper &gt;&lt;/p&gt;). If your input is required there is also CSS used to style the input box when it is not completed. Make use of the label available if the form is sent to the server for validation (using &lt;p vf-form__label vf-form__label--required &gt;...&lt;/p&gt;). vf-form__label All form items need to include a label (using &lt;label vf-fprm__label &gt;&lt;/label&gt;). These should be as short as possible. If you need to include more details use helper text (using &lt;p vf-form__helper &gt;&lt;/p&gt;). If your input is required use the component &lt;p vf-form__label vf-form__label--required &gt;...&lt;/p&gt;. vf-form__helper If you need to include more descriptive explanations of what the input requires make use of the component &lt;span vf-form__helper &gt;&lt;/span&gt; where you can add more text. If your form is has any type of validation (either on the client or server) you can make use of vf-form__helper--error to help with inputs that do not have the correct content. vf-form__fieldset Use the component vf-form__fieldset when there is a relationship betweent form inputs. This maybe a group of text inputs or a group of checkboxes or radio inputs. Or a variation of all. The first HTML element that needs to be inside of &lt;fieldset vf-form__fieldset &gt; needs to be a legend - &lt;legend vf-form__legend &gt;Describing the group&lt;/legend&gt; More documentation is to follow. Install This component is distributed with npm. After installing npm, you can install the vf-form with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default beta  Type: container  Nunjucks demo  Sample output   Left intentionally blank, see vf-form__core--example.   Sample output as HTML   Variant: Example beta  Type: container  Nunjucks demo  Sample output   vf-form__item this field is required. asterick Form Label You have done something wrong. Form helper text vf-form__label Form Label vf-form__label--required field is required. asterick vf-form__input Text  Password  Disabled email Invalid Text field is required. asterick You need to fill this out. vf-form__helper Form helper text vf-form__helper--error You have done something wrong. vf-form__legend This is a form legend vf-form__fieldset (with no content) vf-form__checkbox Form Label vf-form__checkbox--inline Form Label vf-form__radio Form Label Form Label Form Label  Form Label Form Label Form Label vf-form__select Choose a pet: Cat Hamster Parrot Dog Spider Goldfish vf-form__textarea Write Some More details   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-form__core.css vf-form__core.scss File system location: components/vf-form__core ", "tags": "", "url": "/components/vf-form/vf-form__core/index.html"},
{"id":"102", "title": "vf-form__fieldset ", "text": "     Form Fieldset Component Usage The dos and don&apos;ts of using this component. Install This repository is distributed with [npm][https://www.npmjs.com/]. After [installing npm][https://www.npmjs.com/get-npm] and yarn, you can install vf-form__fieldset with this command. JS If your component uses JS: You should import this component in ./components/vf-component-rollup/scripts.js or your other JS process: Sass/CSS If your component uses Sass: The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules. Help Read the Visual Framework troubleshooting Open a ticket Chat on Slack   Variants   Variant: Default alpha  Type: block  Nunjucks demo  Sample output     Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-form__fieldset.css vf-form__fieldset.js vf-form__fieldset.scss vf-form__fieldset.variables.scss File system location: components/vf-form__fieldset ", "tags": "", "url": "/components/vf-form/vf-form__fieldset/index.html"},
{"id":"103", "title": "vf-form__helper ", "text": "     Form Helper Component About Install This component is distributed with npm. After installing npm, you can install the vf-form__helper with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default alpha  Type: element  Nunjucks demo  Sample output   Form helper text   Sample output as HTML   Variant: Error alpha  Type: element  Nunjucks demo  Sample output   You have done something wrong.   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-form__helper.css vf-form__helper.scss File system location: components/vf-form__helper ", "tags": "", "url": "/components/vf-form/vf-form__helper/index.html"},
{"id":"104", "title": "vf-form__input ", "text": "     Form Input Component About Install This component is distributed with npm. After installing npm, you can install the vf-form__input with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default alpha  Type: element  Nunjucks demo  Sample output   Text  Password  Disabled email Invalid Text field is required. asterick You need to fill this out.  Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-form__input.css vf-form__input.scss File system location: components/vf-form__input ", "tags": "", "url": "/components/vf-form/vf-form__input/index.html"},
{"id":"105", "title": "vf-form__item ", "text": "     Form Item Component About Install This component is distributed with npm. After installing npm, you can install the vf-form__item with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default alpha  Type: element  Nunjucks demo  Sample output   this field is required. asterick Form Label You have done something wrong. Form helper text  Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-form__item.css vf-form__item.scss File system location: components/vf-form__item ", "tags": "", "url": "/components/vf-form/vf-form__item/index.html"},
{"id":"106", "title": "vf-form__label ", "text": "     Form Label Component About Install This component is distributed with npm. After installing npm, you can install the vf-form__label with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default alpha  Type: element  Nunjucks demo  Sample output   Form Label  Sample output as HTML   Variant: Required alpha  Type: element  Nunjucks demo  Sample output   field is required. asterick  Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-form__label.css vf-form__label.scss File system location: components/vf-form__label ", "tags": "", "url": "/components/vf-form/vf-form__label/index.html"},
{"id":"107", "title": "vf-form__legend ", "text": "     Form Legend Component Usage The dos and don&apos;ts of using this component. Install This repository is distributed with [npm][https://www.npmjs.com/]. After [installing npm][https://www.npmjs.com/get-npm] and yarn, you can install vf-form__legend with this command. JS If your component uses JS: You should import this component in ./components/vf-component-rollup/scripts.js or your other JS process: Sass/CSS If your component uses Sass: The source files included are written in [Sass][sass] (scss) You can simply point your sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules. Help Read the Visual Framework troubleshooting Open a ticket Chat on Slack   Variants   Variant: Default alpha  Type: block  Nunjucks demo  Sample output   This is a form legend   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-form__legend.css vf-form__legend.js vf-form__legend.scss vf-form__legend.variables.scss File system location: components/vf-form__legend ", "tags": "", "url": "/components/vf-form/vf-form__legend/index.html"},
{"id":"108", "title": "vf-form__radio ", "text": "     Form Radio Component About Install This component is distributed with npm. After installing npm, you can install the vf-form__radio with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default alpha  Type: element  Nunjucks demo  Sample output   Form Label Form Label Form Label  Form Label Form Label Form Label  Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-form__radio.css vf-form__radio.scss File system location: components/vf-form__radio ", "tags": "", "url": "/components/vf-form/vf-form__radio/index.html"},
{"id":"109", "title": "vf-form__select ", "text": "     Form Select Component About Install This component is distributed with npm. After installing npm, you can install the vf-form__select with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default alpha  Type: element  Nunjucks demo  Sample output   Choose a pet: Cat Hamster Parrot Dog Spider Goldfish   Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-form__select.css vf-form__select.scss File system location: components/vf-form__select ", "tags": "", "url": "/components/vf-form/vf-form__select/index.html"},
{"id":"110", "title": "vf-form__textarea ", "text": "     Form Textarea Component About Install This component is distributed with npm. After installing npm, you can install the vf-form__textarea with this command. The source files included are written in Sass(scss). You can point your Sass include-path at your node_modules directory and import it like this. Make sure you import Sass requirements along with the modules.  Variants   Variant: Default alpha  Type: element  Nunjucks demo  Sample output   Write Some More details  Sample output as HTML  Assets Nunjucks template Config CHANGELOG.md vf-form__textarea.css vf-form__textarea.scss File system location: components/vf-form__textarea ", "tags": "", "url": "/components/vf-form/vf-form__textarea/index.html"},
{"id":"111", "title": "Deprecating components ", "text": "  Deprecating components Inevitably code will be replaced and improved, leaving components stale and or outdated. So we should tell developers to not use them. Here&apos;s what we need to make sure we do: Developers can avoid installing and outdated componetn; Developers can know to stop using a componetn; and Components aren&apos;t removed so existing sites continue to function. How to deprecate an entire component In the component-name.config.yml file add: status: deprecated component-type: deprecated hidden: true In the component-name.scss file wrap the sass with: html:not(.vf-disable-deprecated) { Update README.md with: why the component has been deprecated what component(s) developers should instead use Use this template: &lt;h2&gt;This component has been &lt;span style= color: rgb(228, 0, 70); &gt;deprecated&lt;/span&gt;. Please use the &lt;a vf-link href= # new&lt;/a&gt; component.&lt;/h2&gt; in the README.md file. Publish on NPM: follow the guidelines to update the packages using Lerna(TODO). This would be a major release for the deprecated component, decide on other pattern version numbers as described in the documentation for publishing(TODO). Remove the component from vf-core Deprecate on npm: npm deprecate @visual-framework/component no longer supported use the @visual-framework/component instead Need to deprecate just one variant of a component? Add a note to the --variant.njk Use this template: &lt;h2&gt;This variant has been &lt;span style= color: rgb(228, 0, 70); &gt;deprecated&lt;/span&gt;. Please use the &lt;a vf-link href= # new&lt;/a&gt; component.&lt;/h2&gt; in the README.md file. Wrap the relevant Sass in html:not(.vf-disable-deprecated) { Hide the variant tab in .config.yml: See also: example vf-deprecated component Last updated on Apr 9, 2019  ", "tags": "", "url": "/developing/components/deprecating-components/index.html"},
{"id":"112", "title": "Updating, versioning a component ", "text": "  Updating, versioning a component Like the Visual Framework 2.0, components follow semantic versioning by increasing their full version number every time they have breaking changes. However the version number of components its not tied to the version number of the Visual Framework&apos;s vf-core; that is: vf-core&#x200B;@2.1.2 might use vf-button&#x200B;@1.0.1 and vf-component-x&#x200B;@8.2.1 vf-button@1.0.1 might require vf-link@3.0.1 or newer As such components should specify if they only support specific versions of vf-core or require other specific versions of patterns. Other notes and tips on components: should use a semantic versioning style of releases must work with vf-core v2.x, but a component may specify a minimum required minor version of vf-core may indicate any required versions of peer-components in your component&apos;s README.md. vf-component-x@2.1.2 requires vf-component-y@^8.1.0 can live as part of the vf-core monorepo Interested in adding a component? Get in touch or make an issue read more about component versioning in this issue Related Notes on VF versioning. Last updated on Apr 9, 2019  ", "tags": "", "url": "/developing/components/updating-a-component/index.html"},
{"id":"113", "title": "What&#39;s a component ", "text": "  What&apos;s a component Components are a modular set of extendable Sass/CSS styling, JavaScript and templating (Nunjucks). Think of components as lego blocks you can use to build the look, behaviour and content of your sites.  What&apos;s in a component? A component is made up of these files: CHANGELOG.md Notable changes index.scss Used to generate a standalone version of the component&apos;s CSS package.json Version information and any npm required dependencies; you should avoid npm-requiring other VF components README.md Information on the role and how to use a component vf-sample.config.yml Configuration information about the compont, release status, type of component, variants vf-sample.njk A Nunjuck-based template vf-sample.scss Styling vf-sample.js JavaScript Some files will also be dynamically made at build time package.variables.scss Varaibles extratcted from pacakge.json that can be used in the Sass, such as a version number vf-sample.precompiled.js A compiled version of the Nunjucks template vf-sample.css Standoline CSS made from the index.scss  Last updated on Apr 9, 2019  ", "tags": "", "url": "/developing/components/what-is-a-component/index.html"},
{"id":"114", "title": "Code of conduct ", "text": "  Code of conduct We don&apos;t yet have a full policy but, in general: be nice, respectful and considerate. The maintainers will do the same. Last updated on Apr 9, 2019  ", "tags": "", "url": "/developing/getting-started/code-of-conduct/index.html"},
{"id":"115", "title": "Naming things ", "text": "  Naming things The Visual Framework uses a dual approach for the naming of things. At the lower level there are components which are a type of ingredient used to assembl into the higher level patterns that are richer templates with usability guidance. Type 1: Components Components are intended for re-use and should be named for what they are; that is: vf-box (not vf-introduction ) vf-button (not vf-call-to-action ) vf-grid (not vf-wide-layout ) vf-header (not vf-big-headline ) vf-form Why? This ensures that that a box will always be rectangular-ish pattern on pages, whereas an introduction may be a box today, but become simply large text after a redesign. Components have Lots of code Generally that CSS/Sass and some JS An HTML code template (Nunjucks) Documentation on how to use Type 2: Patterns If your pattern is primarily intended to be used for particular websites or a brand, give it a name that is attached to the role it performs; that is: vf-group-masthead vf-registration-form vf-start-page Why? Naming for the role the pattern does allows us to change the future visual structure, so a display headline today may have a black background, but tomorrow might have no background and be large and italic text. Patterns have Lots of code Generally that CSS/Sass and some JS An HTML code template (Nunjucks) Documentation on how to use For further guidance on the distinctions, see: Patterns &#x2260; Components and UK.gov&apos;s information on patterns vs components. Last updated on Apr 9, 2019  ", "tags": "", "url": "/developing/getting-started/naming/index.html"},
{"id":"116", "title": "Setting up your development environment ", "text": "  Setting up your development environment To develop the Visual Framework your will need some free software. Development tools First, see if you have the needed tools installed. Open a command line/terminal how? Mac, Linux/Ubuntu, Windows 10, VS Code integrated terminal Enter node -v Enter yarn -v If any of those steps return an error you need to install the corresponding software. To install Node: go to the official downloads page To install Yarn: Yarn require Node, follow the install guide Development environment We have a recommended development environment for new developers: Setup a GitHub.com account Install the GitHub Desktop git client For editing code, install Visual Studio Code We also recommended some extensions to improve you editing experience and speed: Setup VSCode to work with EditorConfig Tidy up your code: Beautify Fix spelling in your HTML, CSS and JS: Code Spell Checker Get code highlight for .njk files: Nunjucks syntax definition Get autocompletion for your CSS tags: HTML CSS Support Standardised editor configuration: EditorConfig Problems? See the troubleshooting guide. Developing the VF Core You only need to clone vf-core if you wish to make a pull request to create, amend or delete core components, or modify the way Sass, JS or other assets are compiled. Here&apos;s how: Clone vf-core git clone https://github.com/visual-framework/vf-core.git Move to the directory cd vf-core You probably want the develop branch (or your new feature branch) git checkout develop Install fractal You might need to use sudo. yarn global add @frctl/fractal Download all the things yarn install Run a dev build and open in your browser gulp vf-dev Developing on Windows? The Visual Framework is primairly developed on Mac and Linux environments, but it is also intended to be Windows 10 compatible. We test and support Windows 10 using scoop We don&apos;t test using Windows Subsytem for Linux, thought it should work fine or better than native Windows Windows users will also want to consult the troubleshooting on Windows Last updated on Mar 18, 2020  ", "tags": "", "url": "/developing/getting-started/setting-up/index.html"},
{"id":"117", "title": "Creating a new component ", "text": "  Creating a new component This codebase includes a folder and file creation tool. It allows you to quickly create all the required files to make a component -- it gives you the option to create am element, block, or container. Install Yeoman If you&apos;ve come this far and you don&apos;t have yo, you should be able to install it with yarn global add yo@latest If you get stuck, see the official install guide Create a new component Run vf-component-generator and answer the questions when prompted. Type of component: We use a variation of the atomic design methodology, read about the differences here. We use: elements, blocks, and containers. an element would be a heading, or a button a block would be a teaser, or a search form a container would be a group of teasers Name of component: Go for something simple and obvious (todo: we need a guide/documentation on how we name things). Don&apos;t worry about namespacing and prefixing, the tooling will take care of this. NPM package: If you&apos;re making something interesting (probably not an &apos;element&apos;), then saying &apos;yes&apos; will allow the component to be shared as an optional part of the framework on NPM. Your customised template component will is in the /components directory. Add the @import &apos;vf-your-component.scss&apos;; to /assets/scss/styles.scss. Developing your component Edit your template files in the /components/your-component-name folder For further guidance on component configuration, consult the comments in the component template files. Run gulp vf-dev to compile and preview the component Sharing you component back Publish it to npm; and/or If you think your component is useful to the global vf-core community, make a Pull Request or open an issue to discuss. Tip: also consult the [guidelines](/vf-core/developing/guidelines) for the naming of things and coding standards. Language and spelling of documentation, code The vf-core project is being led by EMBL where British English and we&apos;re aware that most code is American English (colour vs color); so: &#x1F4DA;&#x1F1EC;&#x1F1E7; Documentation is written in British English &#x1F482;&#x200D; Rarely use centred text, always use colours &#x2328;&#xFE0F;&#x1F1FA;&#x1F1F8; Code is written in American english &#x1F9E2; $vf-main-color: green; Last updated on Apr 9, 2019  ", "tags": "", "url": "/developing/components/creating-new-components/index.html"},
{"id":"118", "title": "Structure of the Visual Framework core ", "text": "  Structure of the Visual Framework core Design decisions and tokens The Visual Framework uses the Design Token concept to specify design (colour, spacing, type) as reusable JSON or YAML that are translated from .yml data into .scss using Theo. This Design Token abstraction helps portability and integration with other technical systems. You can find the Design Tokens in vf-core/components/vf-design-tokens. File structure The vf-core repo contains three types of files: Components that are located in ./components Build scripts located in the root of the project (mainly) The web interface ./tools/vf-frctl-theme Detailed overview Last updated on Apr 9, 2019  ", "tags": "", "url": "/developing/getting-started/structure/index.html"},
{"id":"119", "title": "Sass and CSS guidelines ", "text": "  Sass and CSS guidelines CSS Naming conventions Components in the Visual Framework follow the BEM naming convention. Namespacing We namespace all universal components with a prefix of vf-. This ensures that the component will not break an existing codebase. This allows the Visual Framework to also include team specific components that are owned by those teams. Design Patterns and Components The Visual Framework makes use of Atomic Design-style concepts to define components. Instead of using Atoms, Molecules, Organisms the Visual Framework uses the terms Elements, Blocks, and Containers. In code we do not include further prefixes for the Visual Frameworks version of Atomic Design. Instead we rely on other components to help determine what is an Element, a Block, or a Container. Elements An Element: headings, lists, buttons, dividers, links, etc. are named after what they are semantically. Blocks A Block: headers, lists, etc. are a single purpose design component that is also named after what it does or where it would go as part of a document structure. It makes use of Elements in the HTML where needed. In the HTML the Visual Framework makes use of | to separate Element classes from Block classes Mixes When creating components you may find that a block you are wanting to use needs specific styling within it&apos;s parent. To do this we make use of BEM&apos;s mixes. Where not only do you include the relevant classnames for the block but add an additional class that includes the parent classname. For example, the page header has two text nodes: The span needs to be a grey colour instead of the default black so we add a mix class to it. Instead of including the elements and relying on the parent class (.vf-page-header) to alter the styling, writing our HTML like this: We add component specific mix classes to the h1 and span to be able to style them: Notes It is good practice when creating a component to include a mix for any child element used. All mix classes should be written in the parents .scss file. So for the vf-page-header example we would write the required CSS in that component&apos;s .scss file rather than in the vf-text.scss file. Containers A Container is a horizontal slice of a page that contains Blocks and Elements. A Container is named after its purpose rather than an abstract concept. How to write your Sass A core principle of the Visual Framework is simple integration into workflows. Accordingly, we use Sass in this project but keep it close to CSS structure so that it&apos;s easily understandable. Nesting Sass allows Nesting of CSS. This is a very nice feature but can be over used and abused. To stop this getting out of hand you should only nest media queries, pseudo classes and where referencing the parent makes sense (things like .vf-no-js and modernizr classes). For example, in Sass: And the compiled CSS: Variables Variables in Sass allow you to reuse things like font stacks, colors and margins etc. Within the UI Pattern Library there is a file within the global folder called _variables.scss where these are defined. If you find yourself repeating a declaration in your CSS a few times it may be worth adding a new variable for this. Try to be as abstract as you can when naming it. For example rather than write $tab-navigation-padding: 10px; and $tab-card-padding: 10px; consider writing $tab-padding or $padding-small; so that it can be used elsewhere without confusion. Mixins By default there are only a limited amount of mixins in the UI Pattern Library. They are more to make writing code easier than doing anything fancy. If you take a look at the _mixin.scss file that&apos;s in the global folder in the scss folder there is a mixin that will make writing media queries, responsive typography and placeholders&apos;s easier when using a component. As this UI Pattern Library can make it&apos;s way into various aspects of the company mixins should be kept to a minimum so that it is easy to understand what they do. Working on a project When you&apos;re working on a project you may need to make notes for things to get back to, or things that are&apos;t done and could change. You should use Sass comments for this. If you have written some code that needs something fixed or added to then add a comment prefixed with @todo. Something l Rike this: If you have written some code that may change as it maybe something that gets pushed back into the patter library or something that may change by design use @maychange. It would look something like this: Your code editor can help you find these when mopping up before a project goes live. Related: Building your first Visual Framework page If you&apos;re looking for some hands-on help with Visual Framework syntax, see this blog post on a quick start on how to work with Visual Framework 2.0 CSS, JS and structure your HTML. Last updated on Apr 9, 2019 ", "tags": "", "url": "/developing/guidelines/css/index.html"},
{"id":"120", "title": "JavaScript guidelines ", "text": "  JavaScript guidelines Just enough JavaScript The Visual Framework isn&apos;t intended as a general-purpose JavaScript solution, however we know it is helpful that a minimal amount of basic functionality is supported. All components are provided as functional solutions, so where JavaScript is required (such as tabs) there is a fully functional set of JavaScript bundled and available in: vf-tabs.js and scripts.js An opt-in philosophy But we know many users would prefer to use their own JavaScript tooling for all -- or some -- components on a case-by-case basis. Why? As Adobe&apos;s Spectrum CSS puts it: We have found that JavaScript is where a framework or library quickly becomes opinionated and stops being easy to use with or across other frameworks. To avoid this problem, Spectrum CSS avoids implementation details that require JavaScript. Likewise we don&apos;t require the use of the Visual Framework JavaScript, instead the behviour can be optionally invoke per-component with JavaScript data selectors. So to activate the Visual Framework JavaScript for vf-tabs we add data-vf-js-tabs and data-vf-js-tabs-content, like so: Leaving these data selectors off will cause vf-tabs.js to simply ignore the tabs. Naming The name of your selector should follow your component&apos;s name, plus an additional -js- prefix. So: vf-tabs = data-vf-js-tabs vf-messages = data-vf-js-messages mycompany-modal = data-mycompany-js-modal Last updated on Apr 9, 2019  ", "tags": "", "url": "/developing/guidelines/javascript/index.html"},
{"id":"121", "title": "Governance of the Visual Framework ", "text": "  Governance of the Visual Framework The Visual Framework 2.0 is an open source project meant for the wider life science community, so the maintainers aim to be transparent about what goes in vf-core, what doesn&apos;t and why decisions are made. The guiding spirit of the Visual Framework can be summed up as: Instead of a quick way to implement one look and feel, the Visual Framework is a way to quickly implement the look and feel needed for your content, data, users and organisation. More background here. What goes in Code committed to vf-core should meet these measures: Not lock you into a particular brand look and feel Be useful to many organisations Be mindful of constraints and use cases common for life science content and data Be compatible with a variety of frontend solutions Be modular and extensible Where ideas are proposed and discussed Ideas are typically discussed on chat and GitHub issues and decisions are documented there. What&apos;s in decision We aim to capture: What was agreed Why it was agreed Forever-hold-your-peace Who makes the decision In spirit, the community but in practice that falls to the maintainers and those asking for change. Who are the maintainers? Currently (as of April 2019) it&apos;s limited to EMBL and EMBL-EBI developers, but we aim to expand this into a consultative group after beta.1 in late spring/summer 2019. The decision process At a high level it follows a flow like this diagram. Last updated on Apr 9, 2019  ", "tags": "", "url": "/developing/guidelines/governance/index.html"},
{"id":"122", "title": "User base and needs ", "text": "  User base and needs The Visual Framework core (&apos;vf-core&apos;) is not intended for direct consumption into websites, rather it&apos;s a component library that should be installed as an npm and Sass dependency to build design systems. Common needs For all supported audiences, we work to address shared needs: Reusable, structured CSS and JS CSS and JS that runs with and alongside other major tools (Foundation, Bootstrap and from the JS side Angular, React) A component library Sane defaults for new websites Make a look and feel more consistent Provide versioned upgrades Easily add your own patterns, tweak existing patterns No fixed look (doesn&apos;t have to look like any specific organisation, such as EMBL) Audience types Our target audience sits in three layers: Maintainers of design systems for life science websites Primary needs: create a design system that utilises the vf-core add a vf-core component to an existing vf-core compatible system primary interface: npm online docs Lower-level developers needs: build a design system for orgs that work with life science info primary interface: docs code command line utils Those curious/learning/evaluating the Visual Framework needs: understand what vf-core is primary interface: the static site vf-welcome site examples of organisations using vf-core What&apos;s not above: people building a site using generic VF-core CSS, JS and HTML components. That&apos;s currently not a use-case we encourage or see the need for beyond as a demonstrative design system. Last updated on Apr 9, 2019  ", "tags": "", "url": "/developing/guidelines/user-base/index.html"},
{"id":"123", "title": "Versioning ", "text": "  Versioning The Visual Framework vf-core and its components have self-contained versions. The Visual Framework uses semantic versioning across all projects and packages. Here are some highlights of what this means: All components are compatible with with vf-core, some components may require a minimum version of vf-core If vf-core has a breaking change it will be updated a full version (v2.0 &#x2192; v3.0), and compnaents may also need to be updated Yarn is used for package management Minimum versions of dependencies are specificed in project&apos;s package.json Component also use semantic versioning Related: Notes on component versioning Components may also require minimum versions of other components Confused? Think of it like your computer&apos;s operating system, just because you update Windows 10 doesn&apos;t always mean your Firefox version needs to change. Where to get the latest version Versions of vf-core and components are published to npm; see the Visual Framework building guide. Release notes Release notes are published to the GitHub releases tab. Where&apos;s version 1 of vf-core? Where&apos;s version 1.x, you ask? That&apos;s the EMBL-EBI specific Visual Framework from where this concept originated, and evolved. Test releases Testing releases will be identified in their tag, a la: v2.0-alpha.1, where -alpha.1 is the tag. -alpha, -beta and -rc are tag suffixes. Last updated on Apr 9, 2019  ", "tags": "", "url": "/developing/guidelines/versioning/index.html"},
{"id":"124", "title": "Making your first Pull Request ", "text": "  Making your first Pull Request To contribute code back, you&apos;ll need to make a PR (Pull Request), as you won&apos;t have write access, GitHub will prompt you to fork the vf-core repository and then you&apos;ll be able to push your branch and open a pull request. What? If you&apos;re thoroughly confused, here are a few helpful links: About branches Making a fork and pull request (video) Branch naming conventions In general type/brief-description-of-branch, example: component/advanced-search, or fix/grid-breaks-on-ios Here are the most common types: components/ when developing a new component; feature/ to be used when working on something that affects the whole system; fix/ to be used for ... fixes; hot-fix/ something very specific and usually urgent; and docs/ for anything to do with documentation, content or code. Automated testing On push When you push your branch to GitHub, Husky will run a pre-commit hook to help enforce Sass linting and ensure the code builds. Visual differences To be confident that we can ammend components code if needed without breaking anything we need to test against the agreed look and interaction(s) of a component. We are making use of Percy to do this, comparisons will be automatically generated before a pull request for a component is accepted. Last updated on Apr 9, 2019  ", "tags": "", "url": "/developing/getting-started/pull-requests/index.html"},
]};